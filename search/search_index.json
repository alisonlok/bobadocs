{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"BobaDocs for Boba Bots 253"},{"location":"#welcome","title":"Welcome","text":"<p>Welcome to the documentation for Boba Bots 253.</p> <p>We are moving at a significantly faster pace than engineering courses offered at the school, and it's okay to get stuck or not know something. The team veterans are here to help, please ask us questions!</p>"},{"location":"construction/tools/fasteners/","title":"Intro to Fasteners","text":"<p>Welcome to the tools section of the construction documentation! For the first part of this section we will be taking a look at fasteners. Fasteners are essential for locking in paramount pieces that allow the robot to maintain form. Each type of fastener comes in many forms, shapes and sizes; while we may not cover every one of them in detail, we hope that this documentation gives you a strong foundation with using construction tools. </p>"},{"location":"construction/tools/fasteners/#screws","title":"Screws","text":"<p>Screws are for wood. Screws are the basic fasteners used to secure planks of wood to another piece of wood. Some companies to sell sheet metal screws but our team prefers to use bolts as an alternative. Something not to do with a wood screw would be to drive it into metal. Another thing you shouldn't do with any screw is to strip it, which is essentially nullifying the edges of the plus-sign on the screw so much that your driver would be unable to get a grip to drive it in. Any stripped screws should be tossed in the trash to avoid miscommunications and incidents.</p>"},{"location":"construction/tools/fasteners/#bolts","title":"Bolts","text":"<p>Bolts are like screws but for metal Although sheet metal screws are offered by various sellers, our team tends to use bolts. You can identify whether or not something is a bolt or screw based on whether or not it's rounded on the edge or sharp and pointy. Bolts are most often accompanied by a fastener typically a lock nut, on the end to secure the bolt. The bolts that our team use are most likely a size 10-24 or 10-32 size, ranging from 0.25\" to 3.00\".</p>"},{"location":"construction/tools/fasteners/#nuts","title":"Nuts","text":"<p>Using the right size wrench is the MOST important thing when it comes to tightening bolts because if you don't, then it will either be impossible or extremely difficult to do so. </p>"},{"location":"construction/tools/fasteners/#lock-nuts","title":"Lock Nuts","text":"<p>Lock nuts are most often accompanied by bolts and are used to fasten bolts in place. One might attempt to fasten a lock nut by holding a lock nut in place with a wrench of the correct size, while using a screwdriver or Allen key to bolt the bolt into place. </p>"},{"location":"construction/tools/fasteners/#washer","title":"Washer","text":"<p>Each screw or bolt has a \"head\", which is that thicker part on the top of the screw or bolt. A majority of the times, washers provide the spacing that a spacer cannot do due to its thickness. The other use of a washer would be to spread the screw or bolt's head size by using washers slightly larger than the head diameter. Looking at this in another perspective, this might not be particularly useful in the event that one would not want to separation between the head and the desired platform.</p>"},{"location":"construction/tools/fasteners/#spacers","title":"Spacers","text":"<p>There are two types of spacers: the snap-on, and the old-fashioned slide-on. Our team often uses snap-on hex spacers that are 3D-printed. The sizes that our spacers come in normally range between 0.125\" and 1.00\" in length. The difference betweenn a spacer and a washer is that screws and bolts can go through the washer to provide spacing, whereas spacers are just space providers. It is not possible to thread a screw or bolt through one of our snap-on hex spacers because that hexagonal part of the spacer snaps onto an axle. One may use a spacer in order to provide spacing between wheels or rollers The advantage of using a snap-on spacer is that it literally just snaps on. No taking out anything on either side of the axle to slide in the spacer. But this means that a snap-on spacer is more likely to fall off after enduring a hard impact. </p>"},{"location":"construction/tools/fasteners/#staples","title":"Staples","text":"<p>Sort of self-explanatory. Staples are used for stapling things to each other. FRC High School teams typically use staples for putting together bumpers (see Robot Mechanisms &amp; Parts of a Robot page). </p>"},{"location":"construction/tools/handtools/","title":"Intro to Hand Tools","text":"<p>In the next section of the Tools documentation for construction, we will be examining various hand tools. The purpose of this section is for the reader to understand safe steps on how to use these tools efficiently for robotics work. It is important to read carefully about the tips and tricks for these tools in order to minimize the chance of injury when working on the robot! It is important that you don't use a tool to do tasks that it's not meant to be used for. For example, using a screwdriver as a mallet. Also, it's important to always remember to return tools back to the designated areas after use before leaving the Maker Space.</p>"},{"location":"construction/tools/handtools/#screwdrivers","title":"Screwdrivers","text":"<p>There are two types of screwdrivers: phillips head and flathead. Phillips head screwdrivers are most commonly found as a cross or plus sign, whereas flatheads are just one single line similar to a minus sign. Always make sure to use the proper screwdriver on a screw. Use the screwdriver to take out and put in screws on a mechanism. One might choose to use a longer screwdriver in order to reach in hard-to-reach places. Contrary to this, one might want to use a shorter screwdriver to reach tight spots. A tip when using a longer screwdriver is to go through holes to reach your destination instead of a weird angle, which might lead to stripping a screw. </p>"},{"location":"construction/tools/handtools/#allens","title":"Allens","text":"<p>Allens come in two different types: T-Allens and Allen keys. Realistically, there isn't a difference in the two types besides that T-Allens are easier to grip and can sometimes get the job done much faster. However, they're very bulky and our team tends to not carry various sizes, which is the advantage of having regular Allen keys. Allens are used to drive bolts and screws with hex sockets. Fortunately, our team typically carries bolts with hex sockets, not screws. A great example of this would be seen on our 2023 Charged Up! Robot, Tea-Rex. The tubing and support system are both lined with either 10-24 or 10-32 hex bolts which makes it extremely easy to navigate in the pit. </p>"},{"location":"construction/tools/handtools/#center-punch","title":"Center Punch","text":"<p>Center punches are used to mark the initial dent/hole before drilling it. After defining the horizontal and vertical, hold the pointed end of a center punch on the cross-section and hit the flat end with a mallet. This will create a mark, which you will drill out and/or drive a fastener into. Typically, it would be okay to drill without a pilot hole (the dent marked a center punch) if it were wood. However, with metal, it's a different story because drilling straight onto metal is risky and it's very easy to get hand injuries involving a drill or driver if you dion't create a pilot hole. </p>"},{"location":"construction/tools/handtools/#scribe","title":"Scribe","text":"<p>DO NOT use the scribe as a center punch.** Scribes are much longer and have sharper points, which are used to mark lines/outlines of a metal piece that are going to be cut. A sharpie works as well, but a scribe is better.</p>"},{"location":"construction/tools/handtools/#wood-saw","title":"Wood Saw","text":"<p>The wood saw is used to cut wood. They are identified by their large, sharp teeth. </p>"},{"location":"construction/tools/handtools/#hacksaw","title":"Hacksaw","text":"<p>The metal hand saw is used to cut small metal pieces, aluminum churros, ThunderHex, and etc. If it does not look like a wood saw, it is a hacksaw. </p>"},{"location":"construction/tools/handtools/#tips-for-saws","title":"Tips for Saws","text":"<p>When sawing with any handheld saw, don't power through it by applying maximum force, but rather use long straight patterns in order to get the maximum out of handsawing. Applying hard force just creates more friction which leads to an uneven cut. </p>"},{"location":"construction/tools/handtools/#pliers","title":"Pliers","text":"<p>Pliers are used to hold small objects. It\u2019s function might vary depending on the type of plier. An example is removing hot bits. </p>"},{"location":"construction/tools/handtools/#wrench","title":"Wrench","text":"<p>The wrench is use to grip, fasten, turn, tighten, and loosen things like locknuts, nuts, and bolts. It comes in different sizes.</p>"},{"location":"construction/tools/handtools/#mallets","title":"Mallets","text":"<p>Mallets are mainly used to hit the center punch. Mallets are also used to apply force to parts to shape or move them with less risk of damaging parts. For example, applying force with the mallet to a bearing to get it into it\u2019s frame, then using the mallet to insert a hexshaft through the bearing(s). They are not used to hit people. </p>"},{"location":"construction/tools/handtools/#rivets-guns","title":"Rivets Guns","text":"<p>Rivet guns are used to drive rivets in to fasten sheet metal or heavy fabric. The thicker side of the rivet goes into the hole, and the slimmer side goes into the rivet gun. When using the rivet gun, keep the rivet and rivet gun straight against the surface. To remove a rivet, drill it out.</p>"},{"location":"construction/tools/powertools/","title":"Intro to Power Tools","text":"<p>In the next section of the Tools document, we will be covering the different types of power tools we use as well as how to handle them safely. Power tools are a very important part of robotics, but they are also very dangerous. Make sure to read through this section thoroughly and don't be afraid to ask for help if you don't understand or are unsure of anything. Safety is our number one concern! DO NOT WEAR GLOVES WHEN USING POWER TOOLS. Especially heavy machinery such as the bandsaw, drill press, and the mitersaw, where they can suck you and/or crush you. </p> <p>Must-Read for ALL Power Tools: Always unplug after use, and only plug it in once you're ready to use</p>"},{"location":"construction/tools/powertools/#drivers-and-drills","title":"Drivers and Drills","text":"<p>Drivers are great for quickly and conveniently securing fasteners such as screws while drills are used for making holes. When putting on the bits on the driver/drill, remember the phrase \"righty-tighty, lefty, loosey\" - To tighten, hit the rightside button inwards and drill/drive. To loosen, hit the leftside button inwards to undrill/undrive. It's important to note that especialy while driving a screw or bolt in, that you put your bodyweight's pressure onto the screw (not too much!), otherwise you will strip the screw.  It's important that you take the proper bit for the job as well (if it\u2019s a driver, match it up to the fastener head, if its a drill choose the right bit for the hole). Ask a lead to demonstrate how to take a driver or drill in and out because the lead that is writing this is too tired to write an essay on how to properly equip a drill or driver.</p>"},{"location":"construction/tools/powertools/#jigsaws","title":"Jigsaws","text":"<p>The jigsaw is a handheld power tool, so they're good for cutting irregular curves on big sheets/pieces that are hard to move. They're also ideal when you want to cut circles like boba. When switching out blades, choose which type of blade you need for the job before plugging the tool in. You can identify whehter or not it is a metal or wood blade the same way you identify types of handheld saws. Also note that the blade must be facing outwards  when you are securing it in.</p> <p>Here are some tips for using jigsaws:</p> <ul> <li>Clamp down the piece being cut</li> <li>Start the blade before making contact with the part being cut</li> <li>Keep two hands on the jigsaw, one pressing the trigger and the other on the front of the saw (for stability)</li> <li>Stop cutting every once in a while to prevent the blade from heating up too much</li> <li>When done cutting, let the saw slow to a stop before removing it from the cut piece</li> </ul>"},{"location":"construction/tools/powertools/#circular-saws","title":"Circular Saws","text":"<p>Circular saws are handheld tools used for cutting metal or wood stock precisely and/or in straight lines (ex. Dowel rods, 2x2's, 2x4's, etc.), or cutting into a part at an angle (used when constructing field elements). </p> <p>Here are some tips for using circular saws:</p> <ul> <li>Securely clamp down the part being cut</li> <li>Start the blade before making contact with the part being cut</li> <li>Firmly move the saw through the piece, making sure that the blade is lined up with the cut line</li> </ul>"},{"location":"construction/tools/powertools/#miter-saws","title":"Miter Saws","text":"<p>Miter saws have a blade mounted on a swing arm that pivots left or right to produce angled cuts. In other words, they're not restircted by angles! They are used when cutting wood and plastic, and can achieve quick and straight or angular cuts. ASK a lead to either cut your piece or teach you how to cut the piece. Although they are not adults (yet), they do know how to use the miter saw well, but need a supervisor to guarantee safety. </p> <p>Here are some tips: </p> <ul> <li>Secure it to table</li> <li>Unplug from power saw, and install appropriate blade for what you\u2019re cutting<ul> <li>Always use sharp blades to avoid kickback</li> <li>Tighten the blade securely into place</li> </ul> </li> <li>Lower and secure the bladeguard after securing blade, with screwdriver</li> <li>Raise saw over piece and allow it to reach full speed</li> <li>To make a miter cut: pivot the blade and secure it down again</li> </ul>"},{"location":"construction/tools/powertools/#bandsaws","title":"Bandsaws","text":"<p>Bandsaws are used for cutting smaller pieces that can fit on the stand or for cutting out smaller measurements. When using a bandsaw, make sure there is a blade in piece and that it's secured. Also make sure that the bandsaw cover is closed and secured. A key is needed to use the bandsaw, so DON'T LOSE IT! When using the bandsaw, whichever direction the blade is circling towards is the side you\u2019ll push the small wood or metal piece in slowly. Too fast, and the blade will get stuck in the wood piece/melt the metal piece. Too slow, and the blade could burn the piece (especially if it's wood). </p> <p>In the event that the piece you are cutting can get dangerously hot, use two pieces of wood and slide them across the platform to replace your hands. If it gets stcuk on the piece, push it back a little (towards you) and then keep going (if this happens, it usually means you were going too fast). After you're done, always unplug the bandsaw. </p> <p>Here are some tips for switching out the blades (do this if you want to switch from metal to wood blades or vice versa)</p> <ul> <li>Make sure the bandsaw is unplugged</li> <li>Open the bandsaw cover by loosening the knob on the side</li> <li>To loosen the blades, turn the knob at the top. Wear fabric gloves to carefully hold the blade when removing it (there should be one, stretched across two wheels)</li> <li>Making sure they\u2019re in the right direction (the blades turn clockwise) when you \u2018stretch\u2019 the new blade across the two wheels</li> <li>It has to be centered on the wheel and a tight fit, so you must be precise and careful</li> <li>Return the removed blades to the bandsaw blade storage area</li> <li>Make sure to close the cover and re-tighten the knobs on the cover</li> </ul>"},{"location":"construction/tools/powertools/#portable-bandsaw","title":"Portable Bandsaw","text":"<p>Portable bandsaws are used for cutting stock, similar to a bandsaw, but when you don't have a regular bandsaw available.</p> <p>While using, keep one hand on the handle and the other hand on the switch. Hold the bandsaw firmly when cutting since the blade can catch the piece being cut. Don't cut \"flexible\" parts like sheet, aluminium, and L-brackets. Only cut \"rigid\" parts such as sheet steel, aluminum 2x4's, 2x2's, shafts, etc.)</p>"},{"location":"construction/tools/powertools/#drill-press","title":"Drill Press","text":"<p>Drill presses are used for precisely drilling holes into wood or metal. We often use them for drilling bearing holes into parts for the robot.</p> <p>Here are some tips on how to use drill presses:</p> <ul> <li>Do NOT wear gloves when using the drill press (gloves can get caught in the bit and pull hand in)</li> <li>Clamp everything securely to the stand</li> <li>Lift up from piece you\u2019re drilling every so often, and drill slowly</li> <li>Have a supervisor for beginners: especially for long pieces, so they can hold the other end; or when there is a shortage on clamps (they can help hold it in place)</li> <li>Always have one hand on the switch, one on the handle<ul> <li>This means that your alignment has to be precise, so accurately mark it beforehand</li> <li>You can turn the handle to bring the drill down onto the piece (without turning the drill press on), to get a precise alignment for the hole you want to drill out</li> </ul> </li> <li>To remove the bit, use the key to loosen the chunk, allowing for removal of the drill bit.</li> </ul>"},{"location":"construction/tools/powertools/#combination-square","title":"Combination Square","text":"<p>Combination squares are used for drawing accurate 90 or 45-degree angles for cutting. To use a combination square, line it up on the edge of the square, one for 90 degrees, one for 45 degrees. You can adjust the ruler by loosening the screw that connects it. Always keep the metal ruler with the combination square.</p>"},{"location":"construction/tools/powertools/#belt-sander","title":"Belt Sander","text":"<p>Belt sanders are used for sanding down, cutting, or measurement errors on WOOD pieces to make them smoother or fit better on the robot. While using a belt sander, hold it with two hands: one on the handle and the other on the switch. Turn on the sander before making contact with the piece you are sanding. Always clamp down on the object you are sanding. With our current belt sander, please do not hold the side of the belt sander with the other hand. You do not want to sand your hand. </p>"},{"location":"construction/tools/powertools/#arbor-press","title":"Arbor Press","text":"<p>Arbor presses are used for pressing or removing a bearing from a bearing hole. When using an arbor press, have one hand on the part you are pressing and the other hand on the lever. Never place your hand underneath the press head.</p>"},{"location":"contributing/contresources/","title":"Contributing Resources","text":""},{"location":"contributing/contresources/#markdown","title":"Markdown","text":"<p>The entire site is based on Markdown. I've found this cheatsheet to be very useful for writing Markdown: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet</p>"},{"location":"contributing/contresources/#mkdocs","title":"MkDocs","text":"<p>The site is generated with MkDocs, which converts the written Markdown to a fully fleshed website. You can find more information about MkDocs here: https://www.mkdocs.org/</p>"},{"location":"contributing/contresources/#readthedocs","title":"ReadTheDocs","text":"<p>This site is hosted on ReadTheDocs, which also handles the conversion of Markdown to HTML with MkDocs. The homepage for ReadTheDocs is located here: https://readthedocs.org/. I suggest checking the Getting Started Guide for information about how to use this service.</p>"},{"location":"contributing/contresources/#material-theme","title":"Material Theme","text":"<p>This site uses the Material Design theme for MkDocs. You can find more information about the Material theme here: https://squidfunk.github.io/mkdocs-material/</p>"},{"location":"contributing/contresources/#markdown-extensions","title":"Markdown Extensions","text":"<p>In addition to default Markdown, the site also uses some extensions to provide additional functionality. All the enabled extensions can be found in the <code>markdown_extensions</code> list in <code>mkdocs.yml</code>. </p> <p>Currently, information about all the extensions we use can be found here: https://squidfunk.github.io/mkdocs-material/reference/admonitions/</p> <p>If you add an extension that requires a new Python package to be installed, be sure to add that package to <code>requirements.txt</code>.</p>"},{"location":"contributing/contributing/","title":"Contributing","text":"<p>There are always going to be improvements, fixes, and updates that can be made to our documentation. It's up to team members to make these changes. Detailed in this section is how you can help with these efforts.</p>"},{"location":"contributing/contributing/#setup","title":"Setup","text":"<p>The following contributing steps assume that you have basic knowledge of Markdown, Python, Terminal, and Github. See Contributing Resources for more details.</p> <p>Although you can directly edit the Markdown file on Github (e.g. quick file changes), it is recommended to setup a proper development environment to work on the website. Auto-reload is supported to give a preview of your local changes before pushing to Github.</p> <p>Tip</p> <p>If you are not familiar with python, editing via a Docker Container is also supported. However, it has not yet been setup for this repository. See MkDocs-Material: Alternative Using Docker for more information.</p>"},{"location":"contributing/updating/","title":"Updating the Documentation","text":"<p>Keep the documentation up to date.</p> <p>Note: If there is a need to edit the documentation for whatever reason, only use a team computer inside the Makerspace to edit the BobaDocs. </p>"},{"location":"contributing/with-python/","title":"Contributing","text":""},{"location":"contributing/with-python/#installing-software","title":"Installing Software","text":""},{"location":"contributing/with-python/#python-3","title":"Python 3","text":"<p>If you do not have Python installed, download it from the official website and follow its install instructions: https://www.python.org/downloads/</p> <p>Tip</p> <p>Make sure to add python to PATH during the install process, it makes life a bit easier.</p> <p>A TextEditor such as Sublime Text 3 or some other text editor is highly recommended. </p>"},{"location":"contributing/with-python/#source-code","title":"Source Code","text":"<p>Clone the bobadocs repository from Github. https://github.com/bobabots253/bobadocs.git</p>"},{"location":"contributing/with-python/#python-dependencies","title":"Python Dependencies","text":"<p>This site uses the MkDocs Python package to convert Markdown files to a website, and a few more packages to provide additional functionality and theming. You can install all the necessary dependencies by running <code>pip install -r requirements.txt</code> while in the root directory of the repository.</p>"},{"location":"contributing/with-python/#development-workflow","title":"Development Workflow","text":""},{"location":"contributing/with-python/#local-changes","title":"Local Changes","text":"<p>To develop locally, run <code>mkdocs serve</code> in the root directory of the project. This will generate a local version of the website from the code at http://127.0.0.1:8000/ and will autorefresh whenever changes are made in docs/.</p> <p>Adding or modifying the documentation is fairly simple, each page of the website is contained within its own <code>.md</code> file. Adding new pages are as simple as creating new <code>.md</code> files</p> <p>Make sure your Markdown files are placed in the correct subfolders. For example, <code>navigating-assemblies.md</code> should be placed in the <code>onshape</code> folder in the repository. This helps others find your documentation later when they want to edit or add information.</p> <p>Page settings are configured in the <code>mkdocs.yml</code> YAML file. All the settings have already been setup for you, simply edit the nav section when making changes</p> <p>Attention</p> <p>Do not forget to add new <code>.md</code> pages to the <code>nav</code> section of <code>mkdocs.yml</code>. New pages not added to the YAML configuration file will not show up on the document.</p> <p>When you are happy with your changes/additions, run <code>mkdocs build --clean</code> to build the site. This will create a site/ directory within the repository. The <code>.gitignore</code> file has been setup so that the local build will not be pushed to Github.</p> <p>Proofread your documentation and make sure that your documentation displays as intended. </p> <p>Hint</p> <p>The purpose of writing documentation is to pass down knowledge to current and future team members. Make sure your documentation is clear and understandable. Add pictures to illustrate your explanations. Adding too much detail is sometimes as bad as putting nothing there in the first place.</p>"},{"location":"contributing/with-python/#push-changes-to-github","title":"Push changes to Github","text":"<p>All Done? Simply push/merge it to the master branch of the bobadocs repository. ReadTheDocs will automatically update the clone the bobadocs repository and update the documentation within a few minutes.</p> <p>Fail</p> <p>If the readthedocs site does not update within a few minutes of your Github push, it is likely that the virtual python docs compiler has failed build. Check your local changes for syntax errors and push again. If the issue occurs again, ask your programming lead to check the readthedocs build logs.</p>"},{"location":"electronics/arduino/","title":"Arduino Syntax","text":""},{"location":"electronics/arduino/#general-coding-structure","title":"General Coding Structure","text":"<p>Anything listed under here is general coding structure that are found in many different coding languages, including Java, C, C++, and Python</p>"},{"location":"electronics/arduino/#for-loop-structure","title":"For-loop structure","text":"<p>The for-loop structure repeats a set amount of code a certain number of times.</p> <p>General syntax:</p> <pre><code>for (initialization; condition; increment) {\n// statement(s);\n}\n</code></pre> <p>This structure is useful for when you want to have a large amount of repetition in code. <code>cpp for (int number = 100; number &gt; 100; number -= 1) { Serial.println(\"hi\"); }</code> Initialization can be any variable or <code>number</code>. For instance, the variable number can be any other name, like <code>i</code> or <code>counter</code> or <code>abc</code>. Condition is a statement condition, think back to if statement conditions. Increments are the code that runs if the condition is true.</p>"},{"location":"electronics/arduino/#if-statement-structure-conditional-statements","title":"If statement structure (conditional statements)","text":"<p>General Syntax:</p> <pre><code>if (condition) {\n//statement(s)\n}\n</code></pre> <p>The condition is something that can either be <code>true</code> or <code>false</code>, called a boolean expression (boolean = 2 outcomes).</p> <p>Examples:</p> <ul> <li><code>x &gt; 120</code></li> <li><code>x &lt;= y</code></li> <li><code>(x + 2) / 4 == 12</code></li> </ul> <p>Conditional operators are used to compare the condition to see if it is <code>true</code> or <code>false</code>.</p> <pre><code>x == y  // (x is equal to y)\nx != y  // (x is not equal to y)\nx &lt; y   // (x is less than y)\nx &gt; y   // (x is greater than y)\nx &lt;= y  // (x is less than or equal to y)\nx &gt;= y  // (x is greater than or equal to y)\n```.\n\nExample:\n\n```cpp\nif (x &gt; 120) {\ndigitalWrite(LEDpin1, HIGH);\ndigitalWrite(LEDpin2, HIGH);\n}\n</code></pre> <p>If <code>(x &gt; 120)</code> is true LEDpin1 and LEDpin2 will be set to 5v (HIGH). If <code>(x &gt; 120)</code> is NOT true, this statement will be skipped and it will move on to the rest of the code.</p>"},{"location":"electronics/arduino/#basics","title":"Basics","text":""},{"location":"electronics/arduino/#setup","title":"<code>setup()</code>","text":"<p>You can use this get your code started. It runs only once when you upload new code to it, and you can put functions like <code>pinMode()</code> in it.</p> <p>Example + what\u2019s happening:</p> <pre><code>void setup()\n{\npinMode(13, OUTPUT);\npinMode(12, INPUT);\n}\n</code></pre> <p>Digital pin #13 is set as OUTPUT, digital pin set #12 as INPUT.</p>"},{"location":"electronics/arduino/#loop","title":"<code>loop()</code>","text":"<p>You can use this after you run <code>setup()</code>. It runs through the code inside of loop() from the top to bottom, and then goes back to the top to bottom\u2026 you get the idea</p> <p>Example:</p> <pre><code>void loop()\n{\ndigitalWrite(13, HIGH);\ndelay(1000); // Wait for 1000 millisecond(s)\ndigitalWrite(13, LOW);\ndelay(1000); // Wait for 1000 millisecond(s)\n}\n</code></pre> <p>This code is the famous \"blinking LED\" code. It will turn the LED on and turn it off. Once it hits the bottom of the code, it\u2019ll go back to the top and repeat.</p> <p><code>#include</code> can be used when you want to include outside libraries. Use <code>#include &lt;LibraryFile.h&gt;</code>. Don\u2019t include a semicolon after the command, and make sure you put it at the very top of the code!</p>"},{"location":"electronics/arduino/#commonly-used-arduino-functions","title":"Commonly Used Arduino Functions","text":"<ul> <li> <p><code>pinMode(pin, mode)</code></p> <ul> <li>Pin = 0,1,2,3 etc (for analog pins, put an <code>A</code> in front of the pin number</li> <li>Mode = INPUT, OUTPUT</li> <li>Tells the specified pin to be either INPUT or OUTPUT mode</li> <li>Used in <code>setup()</code></li> <li>Example: <pre><code>pinMode(A2, INPUT);\npinMode(A4, OUTPUT);\npinMode(13, OUTPUT);\n</code></pre></li> <li>Setting Analog Pin 2 to INPUT</li> <li>Setting Analog Pin 4 to OUTPUT</li> <li>Setting Analog Pin 13 to OUTPUT</li> </ul> </li> <li> <p><code>digitalWrite(pin, value)</code></p> <ul> <li>Value = HIGH, LOW</li> <li>Tells a specified pin to be HIGH or LOW</li> <li>HIGH outputs a voltage of 5V or 3.3V, and LOW outputs 0V (ground)</li> <li>For <code>digitalWrite()</code> to work, the specified pin must be set to OUTPUT mode using <code>pinMode()</code></li> <li>Example: <pre><code>digitalWrite(13, HIGH);\ndelay(1000); // Wait for 1000 millisecond(s)\ndigitalWrite(13, LOW);\ndelay(1000); // Wait for 1000 millisecond(s)\n</code></pre></li> <li>Setting digital pin 13 to output a 5V voltage (HIGH) for 1k milliseconds</li> <li>Setting digital pin 13 to output a 0V (no voltage, LOW) for 1k milliseconds</li> </ul> </li> <li> <p><code>digitalRead(pin)</code></p> <ul> <li>Read the voltage of the specified pin; either HIGH or LOW</li> <li>When you code<ul> <li>HIGH means that digitalRead will output 1</li> <li>LOW means that digitalRead will output 0</li> </ul> </li> <li>For digitalRead to work, you guessed it, the specified pin must be set to INPUT mode using <code>pinMode()</code></li> <li>Example: <pre><code>if (digitalRead(1) == 0);\n{\ndigitalWrite(13, LOW);\n// There is no voltage or LOW state\n// on digital pin 1\n}\nif (digitalRead(1) == 1);\n{\ndigitalWrite(13, HIGH);\n// There is 5V or HIGH state\n// on digital pin 1\n}\n</code></pre></li> <li>If there is no voltage on digital pin 1, then set pin 13 to LOW</li> <li>If there is voltage on digital pin 1, then set pin 13 to HIGH</li> </ul> </li> <li> <p><code>analogWrite(pin, value)</code></p> <ul> <li>Value = any value between 0 and 255<ul> <li>0 = 0% on, or 100% off</li> <li>127 = 50% on, 50% off</li> </ul> </li> <li>Tells the specified pin to change the duty cycle</li> <li>For <code>AnalogRead()</code> to work, the specified analog pin must be set to OUTPUT mode using <code>pinMode()</code><ul> <li>Digital pins with a <code>~</code> besides their number can work as analog pins as well</li> </ul> </li> <li> <p>Example:</p> <p></p> </li> </ul> </li> <li> <p><code>analogRead(pin)</code></p> <ul> <li>Pin = the analog pin number you want to read</li> <li>Will output an integer from 0 to 1023</li> <li>Put an <code>A</code> before the pin number (ex: <code>A0</code>, <code>A2</code>) to specify an analog pin</li> <li>Example: <pre><code>ledBrightness = analogRead(A5) / 4;\nanalogWrite(3, ledBrightness);\n</code></pre></li> </ul> </li> <li> <p><code>Serial.begin(baud rate)</code></p> <ul> <li>The baud rate is a common wavelength measure used by many devices for communication</li> <li>For Arduino, our baud rate is 9600 <pre><code>void setup()\n{\nSerial.begin(9600);\n}\n</code></pre></li> <li>Use this line of code to start up the serial monitor, which is used when you want to print out lines of text</li> </ul> </li> <li> <p><code>Serial.print(message)</code> and <code>Serial.println(message)</code></p> <ul> <li>In between the () you put a message you would like to print out inside of a pair of quotation marks <pre><code>Serial.print(inches);\nSerial.print(\"in, \");\nSerial.print(cm);\nSerial.println(\"cm\");\n</code></pre></li> <li>Prints out the message to the Serial monitor, useful for when you want to say something</li> </ul> </li> <li> <p><code>delay(milliseconds)</code></p> <ul> <li>Pauses the execution of further code for a certain milliseconds</li> <li>1000 milliseconds = 1 second</li> <li>Example: <pre><code>digitalWrite(ledPin, HIGH); // sets the LED on\ndelay(1000); // waits for a second\ndigitalWrite(ledPin, LOW); // sets the LED off\ndelay(1000); // waits for a second\n</code></pre></li> <li>Sets ledPin to 5v (HIGH)</li> <li>Pauses execution of further code for 1000 milliseconds (keeps ledPin HIGH for 1 second)</li> <li>Sets ledPin to 0v (LOW)</li> <li>Pauses execution of further code for 1000 milliseconds (keeps ledPin LOW for 1 second)</li> </ul> </li> </ul>"},{"location":"electronics/arduino/#servo-methods","title":"Servo Methods","text":"<p>Disclaimer: to use these Servo method, you must import the Servo library using #include at the beginning of of your code. To use a Servo, you must declare a variable with a name (myServo) for example with the \u201cServo\u201d type. Your servo name goes before .; for example, if your Servo is called myBestServo, the attach method would be: myBestServo.attach(pin). Our servo in this documentation is called myServo."},{"location":"electronics/arduino/#myservoattachpin","title":"<code>myServo.attach(pin)</code>","text":"<p>Pin means pin# servo is attached to which is similar to <code>pinMode()</code> but for servo motors. It Lets the arduino know that on the specified pin, there is a servo connected. Pin must be a PWM pin (refer to <code>analogWrite()</code> for info on PWM pins). An example is:</p> <pre><code>#include &lt;Servo.h&gt;\nServo myServo;\n\nvoid setup (){\nmyServo.attach(9);\n}\n</code></pre> <p>This creates a Servo type variable called myServo and attaches myServo to pin 9.</p>"},{"location":"electronics/arduino/#myservowriteangle","title":"<code>myServo.write(angle)</code>","text":"<p>Angle is a degree angle between 0 - 180 which moves the servo shaft to that angle. An example is:</p> <pre><code>void loop(){\nmyServo.write(90);\nmyServo.write(0);\n}\n</code></pre> <p>This moves the servo shaft to 90 degrees position and moves the servo shaft back to 0 degrees position.</p>"},{"location":"electronics/arduino/#miscellaneous-information","title":"Miscellaneous Information","text":""},{"location":"electronics/arduino/#duty-cycle","title":"Duty Cycle","text":"<p>Duty Cycle includes: how often the power is ON and OFF and the digital way of simulating an analog wave. For example, when you light an led with 50% duty cycle, it will appear 50% brightness to the human eye.</p>"},{"location":"electronics/sensors/","title":"Intro to Sensors","text":"<p>So now you have the basic sense of what electronics does and have looked at some of the tools that they use. Very nice. Now you can look at one of the most important aspects of Electronics: dealing with sensors. There are a myriad of things you can do with sensors and there are many different types of sensors. There are a lot of sensors and we will never use all of them at one time when making a robot, let alone do everything we possibly can with them at one time. However, there are some sensors you should know about and other pieces of info that you should know when dealing with sensors in electronics. Lets take a look.</p>"},{"location":"electronics/sensors/#lidar","title":"LiDAR","text":"<p>A LiDAR(Light Detection And Ranging) sensor emits pulsed light waves into the surrounding environment. The pulses bounce off the objects and return to the sensor. Then, the sensor calculates the time it took to create an estimate of what objects look like and where they are (think echolocation but with lasers light pulses).</p> <p>These are useful for measuring the distances between the sensor and the object. For example, it can be equipped on drones to survey the terrain and create a 3d model.</p> <p></p> <p>Example of LiDAR Model</p> <p>Using LiDAR can get you precise data quickly (It repeats millions of processes at once to create an accurate 3D map on a computer). Not only that, but the lasers are eye-safe so no one's getting hurt looking at a sensor.</p> <p>Look into LiDAR more with the following links:</p> <ul> <li>\"What is LiDAR\" Article</li> <li>More about LiDAR</li> <li>Basics of LiDAR</li> </ul>"},{"location":"electronics/sensors/#optical-encoders","title":"Optical Encoders","text":"<p>Optical Encoders are made up of four components: a light source, a sensor, a movable disk, and a fixed mask. Rotary encoders use a sensor to identify position change as light passes through a patterned encoder wheel or disk. It detects when light has passed through or not, with the rate of light passing through and being blocked being measured. Forces such as velocity, rotation, and position can be measured using an optical encoder.</p> <p></p> <p>Example of an Optical Encoder</p> <p>Can measure multiple types of motion. For example, the speed of a wheel on a car or robot can be measured. The rate at which the light is allowed through and is blocked is measured, providing for the speed of the wheel.</p> <p>Though this can account for precise motion measurement, it has problems with debris and environments (light, smoke). This is because it can make it harder for light to be detected from the sensor.</p>"},{"location":"electronics/sensors/#magnetic-encoders","title":"Magnetic Encoders","text":"<p>A magnetic encoder is made up of three major components: a sensing circuit, a rotating wheel, and magnetic poles (north+south) spaced evenly around the wheel.</p> <p></p> <p>Parts for Magnetic Encoders</p> <p>The encoder works by placing tiny north and south poles evenly around a rotating wheel. A sensor is then used to detect the tiny changes in magnetic direction, giving feedback on rotary information. Uses either hall effect or magneto resistive detection.</p> <p></p> <p>Example of Magnetic Encoder</p> <p>The spinning wheels cause a response in the sensor based on the changes in magnetic direction. The response goes through a circuit and is displayed as a digital signal on a device. Can be used for measuring rotational motion on items such as wheels.</p> <p>These encoders are very accurate and reliable and produce high resolution, low cost feedback. It also cannot be contaminated by dirt and moisture unlike optical encoders. However, it is susceptable to interference with other magnets.</p> <p>Look into optical and magnetic encoders more with the following links:</p> <ul> <li>Encoders Info</li> <li>Magnetic VS Optical Encoders</li> </ul>"},{"location":"electronics/sensors/#hall-effect-sensors","title":"Hall Effect Sensors","text":"<p>A hall effect sensor is a type of sensor that measures magnetism. Electricity is moved through a semi-conductive material, such as silicon, in a straight line. When a magnetic field is introduced, the electrons moving through the material deviate from their straight line and move to a positive or negative pole (being attracted or repelled) on the material. The changes in voltage that come from the new curved electricity path is then measured.</p> <p></p> <p>Example of Hall Effect Sensor</p> <p>Hall effect sensors are used to detect the motion of an object. For example, the position of a motor can be sensed by measuring the slight change in the magnetic field as the motor rotates. Hall effect sensors are also used in some magnetic encoders, as a sensor is required to detect the changes in magnetic fields on the disk.</p> <p></p> <p>Look into hall effect sensors more with the following links:</p> <ul> <li>Basics of the Hall Effect</li> <li>What is a Hall Effect Sensor?</li> <li>Hall Effect Sensor Applications</li> </ul>"},{"location":"electronics/sensors/#ultrasonic-sensors","title":"Ultrasonic Sensors","text":"<p>Ultrasonic sensors measure distance by using ultrasonic waves. The sensor head emits an ultrasonic wave and receives the wave that is reflected back. They measure distance by calculating time between emission and the reception, very similar to echolocation.</p> <p></p> <p>Example of Ultrasonic Senor in Action</p> <p>Ultrasonic sensors are used to measure the distance between the sensor and an object. We used it in an arduino lesson, where we took the output from this sensor and displayed the measured distance to the console. Check this lesson out. </p> <p></p> <p>Example of Ultrasonic Sensor</p> <p>Be sure to research more about Ultrasonic sensors here:</p> <ul> <li>What is an Ultrasonic Sensor</li> <li>Comparison between Ultrasonic Sensors and Optical Sensors</li> <li>What is an Ultrasonic sensor?</li> </ul>"},{"location":"electronics/sensors/#potentiometers","title":"Potentiometers","text":"<p>Potentiometers are adjustable rotary analog devices that can also act as variable resistors, which can change resistance with a dial. Potentiometers measure current, which is proportional to the distance. It uses a wiper to adjust the resistance (between 2 out of the three pins) of the potentiometer. The outside pings are the voltage and ground pins, while the inside (middle) pin is the resistive measurement.</p> <p></p> <p>Example of potentiometer</p> <p>These are usually used to control speed, voltage, or frequency using a dial that you can rotate. This makes it easy to adjust anything using power whether it be the brightness of a light or the speed at which the intake runs.</p> <p></p> <p>Example of adjusting dial</p> <p>Potentiometers have reliable output and are also very effiecent at measuring large displacements. It also has the unique ability to vary it's resistance, meaning that it is an analog sensor (wide range of inputs).</p> <p>To learn more about potentiometers, check out the links here:</p> <ul> <li>Potentiometers</li> <li>What is a Potentiometer</li> </ul>"},{"location":"electronics/sensors/#photoelectric-sensors","title":"Photoelectric Sensors","text":"<p>The photoelectric sensor is a light based sensor. There is an emitter emitting light to a receiver. If the receiver does not see the light beam emitted from the emitter (the light beam is blocked), it detects an object. The light beam is typically infrared light. A specific sensor of this type would be a beam break sensor.</p> <p></p> <p>Example of photoelectric sensor</p> <p>Photoelectric sensors can detect the presence or absence of an object in the light beam\u2019s pathway, the location of nearby and faraway objects, and changes in lighting. They can also detect any item regardless of material, including glass.</p> <p>To learn more about photoelectric sensors, check out the links here:</p> <ul> <li>Photoelectric Sensors Overview</li> <li>Applications of Photoelectric Sensors</li> </ul>"},{"location":"electronics/sensors/#limit-switches","title":"Limit Switches","text":"<p>A limit switch is a mechanical device operated by a physical force applied by an object that detects the presence or absence of an object. It consists of an actuator which transfers external force to the built in switch. When pressed, the electrical circuit is either closed/opened.</p> <p></p> <p>Example of a limit switch</p> <p>Limit switches can be used as a simple control or lock system. Items that also require a stop button due to a limited range of movement can also use a limit switch. For example, on 3D printers the x and y carriages have limit switches on them to prevent them from moving too far and breaking the machine. Limit switches are liked due to their small and simple design, inexpensiveness, and and sturdiness (can last for many clicks). </p> <p></p> <p>Example of the design of a limit switch</p> <p>To learn more about limit switches, check out the links here:</p> <ul> <li>Limit Switches</li> <li>Limit Switches Explained</li> <li>Technical Explanation for Limit Switches</li> </ul>"},{"location":"electronics/sensors/#magnetometers","title":"Magnetometers","text":"<p>This sensor measures the strength and sometimes the direction of the magnetic fields. It also can be used to calibrate magnets to determine magnetization of materials. There are two types of magnetometers (classified by their calibration methods): - Scalar magnetometers - Quality of attractive fields - Vector magnetometers - Direction of heading</p> <p></p> <p>Example of a magnetometer</p> <p>Magnetometers are used to measure values such as the earth\u2019s magnetic field. They can detect other magnets in the vicinity and give feedback on them. If an FRC game piece has a magnet in them, you can detect it!</p> <p>To learn more about magnetometers, check out the links here:</p> <ul> <li>Magnetometers</li> <li>what is a Magnetometer</li> </ul>"},{"location":"electronics/sensors/#accelerometers","title":"Accelerometers","text":"<p>Any motion, even the force of gravity, can be detected by accelerometers. A small bit of silicon detects vibration/force applied to it.</p> <p></p> <p>Example of an accelerometer</p> <p>Accelerometers are used to detect linear motion (acceleration of an object, hence the name, accelerometer). Such motions include an increase/decrease in speed, sharp turns, strong impacts, bumps and vibrations. They can also find out the angle the device is tilted at with respect to the earth by measuring the amount of static acceleration due to gravity. By combining multiple accelerometers, you can get more axes of information (not just linear motion, but for pitch or yaw).</p> <p>To learn more about accelerometers, check out the links here:</p> <ul> <li>A Beginner's Guide to Accelerometers</li> <li>What is an Accelerometer</li> </ul>"},{"location":"electronics/sensors/#gyroscopes","title":"Gyroscopes","text":"<p>A gyroscope sensor is a device that can measure and maintain the orientation and angular velocity of an object. It is more advanced than an accelerometer because it can measure tilt and lateral orientation.</p> <p></p> <p>Example of a gyroscope</p> <p>Gyroscopes can be used to to measure the 3 dimensional movement (pitch, yaw, roll) of an object as well as detect motion in many different directions and angles:</p> <p></p> <p>To learn more about gyroscopes, check out the links here:</p> <ul> <li>How Gyroscopes Work</li> <li>Gyroscope Applications</li> </ul>"},{"location":"electronics/sensors/#navx-sensors","title":"NavX Sensors","text":"<p>The NavX sensor bundle is a combination of a magnetometer, accelerometer, and gyroscope It can be used to detect many types of motion and get information regarding the orientation and position of the robot.</p> <p></p> <p>Example of NavX2 sensor bundle</p> <p>The NavX is space-effiecent and can measure various types of distances and angles. It can also be used to find the speed and orientation of objects. Though this is a powerful sensor bundle, if you do not need every sensor that comes with it, it may be better to use separate sensors instead.</p>"},{"location":"electronics/skills/","title":"Tools","text":""},{"location":"electronics/skills/#wire-stripper","title":"Wire Stripper","text":"<p>The wire stripper is used to remove the outer plastic insulation of wires. There are two types of wire strippers: handheld strippers and ratchet strippers. To use the handheld stripper, place the wire into the appropriate groove, squeeze the handles and pull on the wire to remove the plastic insulation. If you\u2019re having trouble removing   the plastic, try going down one gauge and try again. To use the ratchet stripper, place the wire in the space under the metal blades and then squeeze the handles all the way through until the handles releases itself. </p> <p></p>"},{"location":"electronics/skills/#soldering-iron","title":"Soldering Iron","text":"<p>The soldering iron is used to join two or more items together with solder (melted metal). To use this,  first heat up the soldering iron and obtain some solder. Second, Carefully use the heated tip of the soldering   iron to melt some solder onto the desired area of choice. An example is melting some solder on a wire to join two  wires together. Make sure to not use too much solder so that the solder forms a solid connection. If desired, cover   up the soldered area with heat shrink or electrical tape.</p> <p></p>"},{"location":"electronics/skills/#crimper","title":"Crimper","text":"<p>The crimper is used to combine a connector and a wire together through compression. To use the crimper properly, first place the stripped ends of the wires you would like to connect inside of the connector. Next, find the gauge of the connector and place it into the appropriate groove. Last, squeeze them like scissors. </p> <p></p>"},{"location":"electronics/skills/#hammer-crimp-tool","title":"Hammer Crimp Tool","text":"<p>The hammer crimp tool is used to join a metal crimp with a wire. To use this tool, first place metal crimp along with the wire inside of the crimp in the bottom \u201cvalley\u201d of the tool. Next, start hammering on top of the tool, smushing the metal and creating a solid connection on the wire. Make sure to hammer down the whole crimp, it should look uniform when done.</p> <p></p>"},{"location":"electronics/skills/#multimeter","title":"Multimeter","text":"<p>The multimeter is used to measure various values such as voltage, current, and resistance. It consists of the physical multimeter and 2 probes. Note that we only use the DC voltage and resistance values. To use the multimeter, first turn the dial to what value you want to measure, then plug the cables into the correct holes at the bottom of the multimeter. Keep in mind that you will always plug a cable into the middle hole, but there are different holes for measuring current/voltage/ohms Finally, put the probes on what you want to measure, make sure you match the ground and positive values correctly on what you are measuring.</p> <p></p>"},{"location":"electronics/skills/#battery-beak","title":"Battery Beak","text":"<p>A battery beak is used to check various stats of the battery, including internal resistance, charge %, and general status. Make sure that batteries for competition pass these criteria: * Resistance (\u201cRint\u201d) must to be &lt;0.2; ideally, competition grade batteries      * Should be around 0.10-0.19 * \u201cStatus\u201d must be \u201cGood\u201d (obv) * If charge is not over 100% (ideally 120%, which is the max), make sure to charge them before any competition matches For testing the robot and such, you don\u2019t need the full 120% charge. For testing, make sure to use crappy batteries that have too high of an internal resistance that they\u2019re not good for competitions. You can find specific instructions here. Video coming after we get back to the makerspace</p> <p></p>"},{"location":"electronics/skills/#heat-gun","title":"Heat Gun","text":"<p>Heat guns are very hot hair dryers used to shrink the heat shrink tubing. Make sure that there are no flammable objects nearby the heat gun when in use.</p>"},{"location":"electronics/skills/#utilities","title":"Utilities","text":""},{"location":"electronics/skills/#zip-ties","title":"Zip Ties","text":"<p>Zip ties are used to quickly join or attach objects together. They can come in multiple lengths and sizes. If the zip ties are too short, you can connect multiple zip ties together to create a \u201czip tie chain\u201d.</p> <p></p>"},{"location":"electronics/skills/#pwm-cables","title":"PWM Cables","text":"<p>PWM is short for Pulse Width Modulation. These cables send signals to microcontrollers with different pulse lengths. They are used to connect certain sensors to the roboRIO (RIO has a couple of PWM ports)</p> <p></p>"},{"location":"electronics/skills/#can-wires","title":"CAN Wires","text":"<p>CAN means Controller Area Network. They allow microcontrollers to communicate with each without a computer (roboRIO). They are used to connect RoboRIO, PCM, speed controllers, PDP</p> <p></p>"},{"location":"electronics/skills/#anderson-connectors-mini-and-regular","title":"Anderson Connectors (mini and regular)","text":"<p>Anderson connectors are used to connect wires to one other through small insulated housings.They can also be used as the connecting plug from the battery to the robot. To use the connectors, start by placing the stripped ends of the wires you would like to connect in the metal Anderson contact. Next, crimp the wire to the contact securely for good circuit connection. Finally, fit/slide the wire and metal contact into the connector housing. </p> <p></p>"},{"location":"electronics/skills/#electrical-tape","title":"Electrical Tape","text":"<p>Electrical tape is used to cover/insulate exposed wires. It can patch up and secure small wire-connected areas. It can be used for any number of things, however. You can color code the positive and ground with red and black tape.</p> <p></p>"},{"location":"electronics/skills/#heat-shrink-tubing","title":"Heat Shrink Tubing","text":"<p>This tubing is a useful alternative to electrical tape. Once heated up, the tubing shrinks around the wire and provides insulation and some protection from the environment. There are different diameters of tubing, so make sure to choose the  correct size for different wire gauges.</p>"},{"location":"frc-competition/aspects-of-competition/","title":"Aspects of Competition","text":""},{"location":"frc-competition/aspects-of-competition/#at-competition","title":"At Competition","text":"<p>At competition, the team is typically divided into groups, each contributing differently to the team\u2019s success.</p>"},{"location":"frc-competition/aspects-of-competition/#in-the-pits","title":"In the Pits","text":"<p>The pit is an area where teams do robot maintenance between matches. Typically only a few members (dubbed the pit crew and typically from technical departments) are allowed in the pit at a time to prevent overcrowding. Sometimes, matches are closely knit for certain teams, and it should be taken into consideration that members who know what they are doing should do robot maintenance (if necessary) quickly to maximize robot performance during the actual matches, which is why we often see leads and veteran members in pit crew. Other general members not part of pit crew are seen bleacher scouting, pit scouting, or spending leisure time in the pit area.</p> <p></p> <p>Team 253\u2019s pit crew during the 2016 San Francisco Regionals.</p>"},{"location":"frc-competition/aspects-of-competition/#drive-team","title":"Drive Team","text":"<p>The drive team is a subgroup of the team that is focused on managing the robot on the field. The traditional drive team consists of a driver, operator, technician, drive coach, and human player, but the member roles can vary depending on the game. Each member is assigned a specific task. During build season, drive trials are held to determine drive team members.</p> <p>Driver and Operator: The driver controls the robot during matches and the operator works with the driver to score game pieces. Only the driver and operator are allowed to touch the driver station (robot controls) during matches.</p> <p>Drive Coach: The drive coach manages the drive team. Some of their responsibilities include developing match strategies with alliance partners and passing on the information to the rest of the drive team. During matches, the drive coach can guide the driver and operator.</p> <p>Technician: The technician is the drive team\u2019s resource for the troubleshooting and maintenance of the robot on the field. To help them troubleshoot, technicians should have an understanding of the systems that connect the robot to the driver station. This includes the operator console as well as the robot\u2019s electronics, like the radio, roboRIO, and battery. </p> <p>Human Player: The human player directly interacts with game pieces during matches, with their task varying between games. There can be multiple human players who can be cycled through, but only 1 is allowed per match.</p>"},{"location":"frc-competition/aspects-of-competition/#scouting","title":"Scouting","text":"<p>An important part of any team\u2019s success at competition is scouting, where groups of students from one team collect information on other team\u2019s robots. </p> <p>Pit Scouting: Team scouting usually involves approaching the pit crew of another team and asking a set of questions about their robot. Pit scouting helps the strategy team determine another team's robot's physical capabilities.</p> <p>Bleacher Scouting: Teams will typically send scouters to record information about another team\u2019s performance during matches. Our bleacher scouters are expected to know how to properly bleacher scout and pit scout regardless of what they want or do not want to do. The information taken from bleacher scouting is used by the strategy team to predict opposing team strategy. This is helpful for determining a team\u2019s recent performance, which can change over the course of a competition (for example if a robot suffered a mechanism failure or if the driver was inconsistent).</p> <p>Department Scouting: The process of department scouting is the same as with team scouting, but the purpose differs in that it is done specifically to help departments learn about new techniques and mechanisms that other teams are using. Department scouts use different scouting forms than team scouts.</p>"},{"location":"frc-competition/aspects-of-competition/#game-strategy","title":"Game Strategy","text":"<p>Before a match, the drive teams of an alliance often come together and discuss strategy. This will usually involve assessing what each team should be doing at each stage of the match (auto, teleop, endgame), planning out routes on the field to avoid congestion, and predicting and countering the opposing alliance\u2019s strategy. </p> <p>Listed below are some factors taken into account during strategy discussions.</p> <ul> <li>teams\u2019 strategy in prior matches</li> <li>recent team performance</li> <li>strengths and weaknesses of robots</li> <li>synergy among robots</li> </ul> <p>Much of this information should already be documented in the team\u2019s scouting data before alliance members meet. Our strategy comes together for a strategy discussion before the next alliance strategy discussion where the strategy lead, superscouters, and drive team meet with other teams in future matches to discuss strategy for those matches. Teams should come into an alliance strategy discussion with their own strategy in mind. </p>"},{"location":"frc-competition/aspects-of-competition/#alliance-selection","title":"Alliance Selection","text":"<p>After an initial set of qualification matches, teams participate in alliance selections, in which the top 8 ranked teams formally invite other teams to form a playoff alliance. Playoff alliances do not change and will persist for the duration of the playoffs, until the alliance is eliminated or wins the finals match. Teams can form pick lists to help them determine what teams they will extend an invitation to OR what teams they would accept offers from during alliance selections.</p>"},{"location":"frc-competition/aspects-of-competition/#competition-awards-judges","title":"Competition Awards &amp; Judges","text":"<p>Teams are eligible to receive a number of awards at a competition event. These include technical awards like the...</p> <ul> <li>Autonomous Award</li> <li>Creativity Award </li> <li>Excellence in Engineering Award</li> <li>Industrial Design Award</li> </ul> <p>and team attribute awards like the...</p> <ul> <li>Impact Award</li> <li>Safety Award</li> <li>Gracious Professionalism Award </li> <li>Imagery Award </li> <li>Team Spirit Award</li> </ul> <p>To help inform their decision making for awards, FRC judges will approach teams in their pits at random to observe and ask questions on the team and robot. Due to this teams are encouraged to keep a knowledgeable member in the pit at all times, though any pit crew member should be prepared to answer questions.</p> <p>At the end of each competition, a closing ceremony is held where the award winners are announced. </p> <p></p>"},{"location":"frc-competition/aspects-of-competition/#offseason-competitions","title":"Offseason Competitions","text":"<p>There are a variety of offseason competitions that teams can participate in. These events are often hosted by other teams in the community; examples include Team 254\u2019s Chezy Champs event, Team 2073\u2019s Capital City Classic event, and the Western Region Robotics Forum\u2019s (WRRF) Calgames. Since these don\u2019t count as official competitions, they are a great opportunity for new members to familiarize themselves with the competition environment and develop skills for the onseason.</p>"},{"location":"frc-competition/aspects-of-competition/#resources","title":"Resources","text":"<ul> <li> <p>Utilizing the Human Player</p> </li> <li> <p>Alliance Selection Process (pg. 112)</p> </li> <li> <p>List of Penalties (pg. 43)</p> </li> <li> <p>An Idiot\u2019s \u2018Complete\u2019 Guide to FRC</p> </li> <li> <p>List of Competition Awards</p> </li> </ul>"},{"location":"frc-competition/frc-competition-overview/","title":"FRC Competition Overview","text":""},{"location":"frc-competition/frc-competition-overview/#what-is-first-robotics","title":"What is FIRST Robotics?","text":"<p>FIRST (For Inspiration and Recognition of Science and Technology) Robotics is an organization that holds international high school robotics competitions. Each year, teams of students are challenged to raise funds, design a team brand, and engineer an industrial-sized robot to compete in a field game against other teams. Teams can also have mentors, who are professionals that volunteer and lend their expertise to guide the team.</p> <pre><code>*\u201cIt\u2019s as close to real-world engineering as a student can get.\u201d*\n\n\\- FIRST Website\n</code></pre>"},{"location":"frc-competition/frc-competition-overview/#what-is-the-first-robotics-competition","title":"What Is The First Robotics Competition?","text":""},{"location":"frc-competition/frc-competition-overview/#history","title":"History","text":"<p>The FIRST Robotics Competition was founded in 1989 by inventor and entrepreneur Dean Kamen and retired MIT professor Woodie Flowers. Dean Kamen was unhappy with the number of women and minorities who did not consider STEM (Science, Technology, Engineering, Mathematics) careers. The first competition season was held in 1992.</p> <p></p> <p>Woodie Flowers (left) and Dean Kamen (right).</p>"},{"location":"frc-competition/frc-competition-overview/#frc-pathway","title":"FRC Pathway","text":"<p>The FIRST Organization also holds competitions for students of varying ages. These include the...</p> <ol> <li>FIRST Lego League Junior: grades K-4</li> <li>FIRST Lego League (FLL): grades 4-8</li> <li>FIRST Tech Challenge (FTC): grades 7-12</li> <li>FIRST Robotics Challenge  (FRC): grades 9-12 (that's us!)</li> </ol> <p></p>"},{"location":"frc-competition/frc-competition-overview/#events","title":"Events","text":"<p>There are two competition models which a team can opt into: regional and district competitions.</p> <p>Regionals: Teams begin by signing up for and competing in one or more regional competitions. Any team can attend a regional, and it usually houses 40-70 teams. By winning regionals, each team in the winning alliance (group of three teams) receives a ticket to the championships. (We use the regional model.)</p> <p>District: Compared to regionals, district competitions are smaller in scale, and entry is limited by geographic location. Instead of the winners ascending to the championships, teams compete for points in district competitions. Those with the most points attend the district championship event, and teams with the most points receive tickets to the championships. District competitions are more abundant and are cheaper than regionals, and teams are able to attend more events and play more matches.</p> <p>Championships: Teams from all over the world meet at the championship event and compete. The winner is automatically given a ticket to the next year\u2019s championship. Past championships were held in cities such as Houston, Detroit, and St. Louis.</p> <p>Competition events will oftentimes include extra activities for members to participate in. These include workshops and panels, where students and mentors present and discuss FRC related topics. Competition is also expensive (transportation, food, housing, sign-up fees, etc.), so teams spend time fundraising throughout the year.  </p> <p></p> <p>Winners for both regional and championship competitions, as well as select awards are awarded with a blue banner.</p>"},{"location":"frc-competition/frc-competition-overview/#other-events","title":"Other Events","text":"<p>Community Events: Aside from regional and championship events, members in the community also hold their own competition events. Examples include...</p> <ol> <li>Chezy Champs, hosted by Team 254 (Bellarmine College Preparatory, San Jose)</li> <li>MadTown Throwdown, hosted by Team 1323 </li> <li>CalGames, hosted by the Western Regional Robotics Forum</li> </ol> <p>Fun Fact</p> <p>During the 2019 season, nearly 100,000 high school students on 3,940 FIRST Robotics Competition teams will compete in 100 District Events, 11 District Championships, and 62 Regional Events.</p>"},{"location":"frc-competition/frc-competition-overview/#first-philosophies-core-values","title":"FIRST Philosophies &amp; Core Values","text":"<p>FIRST has two main philosophies which it encourages its members to adopt not only during the time they spend in the program, but into their own lives. </p>"},{"location":"frc-competition/frc-competition-overview/#gracious-professionalism-gp","title":"Gracious Professionalism (GP)","text":"<p>Gracious Professionalism is a way of doing things that encourages high-quality work, emphasizes the value of others, and respects individuals and the community. People who practice Gracious Professionalism learn how to both compete fiercely, while also respecting and being kind to others.</p> <p>\u201cThey avoid treating anyone like losers. Knowledge, competition, and empathy are comfortably blended.\u201d</p> <p>- FIRST Website</p> Woodie Flowers explains Gracious Professionalism <p></p>"},{"location":"frc-competition/frc-competition-overview/#coopertition","title":"Coopertition","text":"<p>Coopertition is displaying unqualified kindness and respect in the face of fierce competition. The idea is founded on the philosophy that teams can and should help and cooperate with each other even as they compete. Coopertition involves both learning from and teaching teammates. It is learning from mentors, both managing and being managed. </p> <p></p>"},{"location":"frc-competition/frc-competition-overview/#first-core-values","title":"FIRST Core Values","text":"<p>To learn more about the FRC, check out the FAQ here.</p>"},{"location":"frc-competition/intro-to-aspects-of-competition/","title":"Intro to the Aspects of Competition","text":"<p>Part of being part of a robotics team is going to competition. Competition is an extraordinary experience where our robot will be put to the test in FIRST's game. Here we will go over the key aspects of competition as well as competition vocabulary so you can be prepared for first competition</p>"},{"location":"frc-competition/intro-to-aspects-of-competition/#kickoff","title":"Kickoff","text":"<p>Onseason (build-season) begins with a broadcasted kickoff event, where details on the year\u2019s game are revealed. A video animation of the game is typically shown and a code to unlock the game manual, a document specifying the rules and other details of the game. After kickoff, teams will begin the planning, brainstorming, and building process. </p>"},{"location":"frc-competition/intro-to-aspects-of-competition/#game-vocabulary","title":"Game Vocabulary","text":"<p>Before we look at competition, lets look at some key terminology we use at competition.</p> <ul> <li> <p>Alliance: A group of three teams that work together in a game. In qualification matches this is random, but during playoffs, alliances are chosen. (All matches are in a 3v3 format.)</p> </li> <li> <p>Match Points: Points earned throughout a match by scoring or completing activities in the game. The alliance with the most points wins the match.</p> </li> <li> <p>Ranking Points: Points earned through select activities in the game and winning matches. Ranking points go towards a team\u2019s rank.</p> </li> <li> <p>Qualification Matches: Matches where random alliances compete against each other to score match and ranking points.</p> </li> <li> <p>Playoff Matches: Matches where the top 4 alliances compete against each other to score match points only. 2 losses for any team results in an elimination. Matches are played until one winning alliance remains.</p> </li> <li> <p>Penalties: Certain actions, such as intentionally damaging other robots and throwing game pieces outside of boundaries are prohibited during matches, and will result in punishments ranging from point deduction to disqualification. </p> </li> <li> <p>Autonomous Period: The period in the beginning of matches where robots are pre-loaded with game pieces and are allowed to attempt to score points while driven entirely by code.</p> </li> <li> <p>Teleop Period: This phase occurs for the rest of the match time. Teams have manual control over their robot and work together in alliances to score points.</p> <ul> <li>Defense: Some alliances will dedicate a bot to protect their alliance\u2019s robots from incoming attackers or prevent enemy bots from scoring.</li> <li>Endgame: The period towards the end of the match where teams have the chance to gain extra points by completing a special action.</li> </ul> </li> </ul> <p></p> <p>Team 1678 performs a three bot climb as part of the endgame phase of 2019\u2019s Deep Space game.</p>"},{"location":"onshape/basic-parts/","title":"Creating Basic Parts In Onshape","text":""},{"location":"onshape/basic-parts/#entering-the-3rd-dimension","title":"Entering the 3rd Dimension","text":"<p>Once you\u2019ve gotten a good grasp of sketching, we can exit out of the sketch environment and move onto creating 3D objects in the features environment. Onshape allows for two main types of modeling, solid-body, and surface. The method covered in this document is solid-body modeling, which is needed to create most shapes. </p> View Video Lesson: Parts Features (Extrude, Revolve, Sweep, Loft) <p></p> <p>It\u2019s important to remember that the approach to 3D modeling, like sketching, varies between person to person. There is no \u201ccorrect way\u201d to model, but there are more efficient ways that eliminate the number of operations, decreasing clutter and making your model easier to edit.</p>"},{"location":"onshape/basic-parts/#planes","title":"Planes","text":"<p>By default Onshape provides 3 basic reference planes: the top, front, and right. These planes help define the 3D environment, but you aren\u2019t limited to only them. Onshape also allows you to create your own reference planes from the 3 basic planes or from faces of existing parts. </p> View Video Lesson: Creating Planes <p></p>"},{"location":"onshape/basic-parts/#the-path-and-the-profile","title":"The Path and The Profile","text":"<p>Many solid-body modelling features will require both a path and a profile. The profile is the sketch or flat surface that you will be extruding. The path is a line or axis that guides the profile\u2019s extrusion. </p> Before <p> In this image, the profile is the square and the path is the line drawn in a circular path.</p> After <p> After the revolve function is used, the resulting part looks like this.</p>"},{"location":"onshape/basic-parts/#worked-example","title":"Worked Example","text":"View Video Lesson: Parts Worked Example 1 View Video Lesson: Parts Worked Example 2"},{"location":"onshape/basic-parts/#resources","title":"Resources","text":""},{"location":"onshape/basic-parts/#practice-yourself","title":"Practice Yourself","text":"Practice 1 Practice 2"},{"location":"onshape/complex-parts/","title":"More Complex Parts","text":""},{"location":"onshape/complex-parts/#other-features-tools","title":"Other Features Tools","text":"<p>The extrude, revolve, sweep, and loft features make up the core of 3D modelling, but there are a plethora of other features in Onshape. Let\u2019s take a look at some of them here.</p> View Video Lesson: Parts Features 2 (Fillet, Chamfer, Draft, Rib, Shell, Hole) <p></p>"},{"location":"onshape/complex-parts/#patterning-and-mirroring-in-the-features-environment","title":"Patterning and Mirroring in the Features Environment","text":"<p>Like in the sketch environment, patterning and mirroring are also possible in the features environment, though with some slight changes.</p> View Video Lesson: Patterning and Mirroring <p></p>"},{"location":"onshape/complex-parts/#differentiating-sketches-extruding-and-features","title":"Differentiating Sketches, Extruding, and Features","text":"<p>It is important to understand that the typical process for CADing follows creating the model through sketching, extruding, and adding features. (Extruding is a feature, but in this context we mean adding a body to your sketch) The basic outline of the model is drawn up in the sketches environment. Then, the model is given a rough 3D shape through the extrusion process, which involves extruding, revolving, sweeping, lofting, etc. Finally, the model\u2019s details are added through the features like the fillet, chamfer, shell, hole, etc. </p> <p>This is important because features like the chamfer and fillet will consume or change the dimensions of the edges it has been placed on, so if you want to reference a certain face after a feature has been applied on it, it will have changed. For this reason, adding features should always be done towards the end of your process.</p> <p>Alright, let\u2019s finish up learning about the features, this time with a Youtube video.</p> View Youtube Lesson: Parts Features 3 (Boolean, Split, Transform, Delete Part) <p></p>"},{"location":"onshape/complex-parts/#designing-around-machinability","title":"Designing Around Machinability","text":"<p>As you continue CADing, you may be required to design your models for different types of creation, such as printing on a 3D printer, milling on a CNC, or physical fabrication. The document below goes more in depth on what these machines are and what to look out for when CADing models for them.</p> <p>View Design Considerations Document</p> <p>Author\u2019s Note: The Importance of Planning and Design</p> <p>I\u2019ve dedicated this last section to emphasizing the importance of planning out your process when you are recreating CAD diagrams. It is ALWAYS good practice to spend a couple seconds analysing the sketches and think about your approach to creating it (what functions to use and in what order to use them). In doing this, you are likely to eliminate errors you haven\u2019t accounted for and you get a better understanding of your own process, which makes troubleshooting a lot easier. Follow this simple step and you\u2019ll be well on your way to becoming a CAD master!</p>"},{"location":"onshape/complex-parts/#worked-examples","title":"Worked Examples","text":"View Video Lesson: Complex Parts Example"},{"location":"onshape/complex-parts/#resources","title":"Resources","text":""},{"location":"onshape/complex-parts/#practice-yourself","title":"Practice Yourself","text":"Practice 1 Practice 2"},{"location":"onshape/intro/","title":"Intro to Onshape","text":""},{"location":"onshape/intro/#introduction","title":"Introduction","text":"<p>Before you get started with Onshape, it's useful to understand the whats and whys of CAD. CAD stands for Computer Aided Design, and there are a bunch of CAD softwares out there. Some of the more popular ones include Solidworks, Fusion 360, AutoCAD, and of course, Onshape. Each software has their own unique features and quirks, but they accomplish the same goal: they allow you to create detailed digital models so you can easily design, test, and iterate almost anything.</p> <p>So why use Onshape? </p> <ul> <li>First, Onshape can be used directly from your browser, so it's much more accessible than other CAD programs that require a dedicated installation. </li> <li>Second, Onshape is completely free; other software is often very expensive. </li> <li>Third, Onshape allows you to share your projects, so that multiple people can work on the same project at once. Most other softwares don\u2019t have this feature.</li> </ul> <p>Ok with that out of the way, let's talk Onshape. What is it? How do I get started?</p> <p>Well, the link to the website is here. You\u2019ll need to create a free account first, and to do that you\u2019ll need to click on the \u201cget started\u201d button on the site. Then follow the prompts to create and activate your account. You may need to select the \u201cstudent\u201d option and fill in details about your school.</p> <p> Alternatively, you can also create an account through the sign inpage with the \u201csign up\u201d option.</p> <p>Important</p> <p>It's important to note that Onshape uses WebGL, so you\u2019ll need to check your computer's graphics requirements, and be using a browser that supports it. You can check your computer\u2019s requirements here.</p>"},{"location":"onshape/intro/#navigating-the-workspace","title":"Navigating The Workspace","text":"<p>Ok, once you\u2019ve set up your account, we can move on to dissecting the interface of Onshape.</p> View Video Lesson: Navigating Onshape <p></p> <p>Feel free to play around with the interface for a bit before you move on.</p>"},{"location":"onshape/navigating-assemblies/","title":"Navigating Assemblies In Onshape","text":"<p>By now you should be familiar with both the sketch and features environment in Onshape. The last environment we\u2019ll cover is the assembly environment! The assembly environment is used for modeling interactions between different parts, and it allows users to build more complex objects (called assemblies) from existing parts.</p> View Video Lesson: Navigating the Assembly Environment (Grouping, Fixing, Inserting, Subassemblies) <p></p>"},{"location":"onshape/navigating-assemblies/#mating","title":"Mating","text":"<p>Mating is key to shaping the way your part studios interact with each other. Onshape provides users with a list of mates, along with mate connectors, which allow you to define custom mating points.</p> View Document: Brief Overview Of Mating <p>Mating is the connection of separate parts (part studios) together to form one cohesive piece or model of a product. Mating on Onshape must be done in the Assembly tab. </p> <p>Mating is done through the use of Mate Connectors. These are little circle icons that appear when you select a mate option in an assembly. Select two mate connectors while inside a mate menu and they will mate together. </p> <p></p> <p>Onshape automatically selects common mating positions for objects and creates mate connectors on them for your convenience, but if you want to attach an object to a place where there is no predefined mate connector, you can select the mate connector option and create your own. </p> <p></p> <p>Mates work by defining and restricting the degrees of freedom of an object. To find out specifics about each mate, access the document below.</p> <p>https://learn.onshape.com/learn/course/fundamentals-onshape-assemblies/mating-assembly-components/onshape-mate-types?page=3</p> <p>You can also look at the icons in Onshape itself. They show you the degrees of motion that the mate allows. </p> <p>The fasten mate restricts all movement and so its icon has no arrows. </p> <p></p> <p>The revolute mate allows rotational motion only. Its icon reflects this. </p> <p></p> <p>Some mates will have limits, or degree values, which allow you to restrict its motion further. These are located in the menus of their respective mates. </p> <p>Others may allow you to change the axis of the mate and flip it around or offset its position.</p> <p></p> <p>You can suppress mates just like you can hide sketches by right clicking on the mate in the left menu. These will cancel their function in the document until you unsuppress them. </p> <p>This is also where you can isolate them or make them transparent.</p> <p></p>"},{"location":"onshape/navigating-assemblies/#degrees-of-freedom","title":"Degrees of Freedom","text":"<p>Mates control the degrees of freedom of your part. Every object has 6 degrees of freedom, rotational (around an axis) and translational (up, down, left, right) in each of the three planes (top, left/right, front). It\u2019s difficult to keep track of which degrees/what motion a mate limits, I\u2019d recommend just looking at the mate icons to discern which degrees/what motion a mate allows instead. </p> View Video Lesson: (Mate Connectors, All Mates, Joint Limits) <p></p> <p>Tip</p> <p>When, working with many parts, it can sometimes be difficult to select a specific part you need. Fortunately, you can right click on objects in the environment (or part itself on the left tab) and make them transparent, hide, or isolate them! </p>"},{"location":"onshape/navigating-assemblies/#worked-examples","title":"Worked Examples","text":"View Video Lesson: Toggle Clamp Worked Example <p>Copy the workspace for the Toggle Clamp assembly here.</p> <p>Mate your toggle clamp to have this type of motion:</p>"},{"location":"onshape/navigating-assemblies/#resources","title":"Resources","text":""},{"location":"onshape/navigating-assemblies/#practice-yourself","title":"Practice Yourself","text":"Practice 1: Tripod <p>Copy the workspace for the tripod assembly here.</p> <p>Mate your tripod to have this type of motion:</p> <p></p> <p></p> Practice 2: Grinder Vise <p>Copy the workspace for the grinder vise assembly here.</p> <p>Mate your grinder vise to have this type of motion:</p> <p></p> <p>Note</p> <p>You\u2019ll need the screw relation to achieve the spinning motion on the handle. To find and use the screw relation, you can use the search bar by pressing Alt+C. Select the function and click on an existing cylindrical mate to apply it, then input a distance per revolution value, which is 0.5 inches in the video.</p> <p></p>"},{"location":"onshape/sketching/","title":"Sketching In Onshape","text":""},{"location":"onshape/sketching/#getting-started-with-sketching","title":"Getting Started with Sketching","text":"<p>So now hopefully you\u2019re a bit more comfortable navigating around Onshape. Let\u2019s start working on creating sketches.</p> View Video Lesson: Sketching and Constraining Basics <p></p>"},{"location":"onshape/sketching/#constraining-objects","title":"Constraining Objects","text":"<p>An important concept in any CAD software, not just Onshape, is constraining. Constraining is the process of limiting or restricting the entities in your sketch.</p> <p>To constrain a sketch follow the Size, Location, Orientation process. Any type of sketch will need to fulfill these three conditions to be defined. </p> <ul> <li>Size: This is a measurement of the entity itself.</li> <li>Location: This defines the entity\u2019s position in 3D space.</li> <li>Orientation: This is the \u201cdirection\u201d that an entity is in. </li> </ul> <p>Relations provide ways to quickly define a sketch entity\u2019s size, location, and orientation. Understanding them will help you create more detailed sketches and troubleshoot errors quickly.</p> View Video Lesson: Relations <p></p>"},{"location":"onshape/sketching/#reading-sketches","title":"Reading Sketches","text":"<p>It\u2019s also important to be able to understand diagrams of 3D models. Interpreting sketches can vary depending on the type of sketch, but there are certain symbols you will tend to see across the majority of drawings. For the most part, all the information about a model can be found from its diagram, but sometimes dimensions/relations will need to be inferred. The resources below list some of the more common symbols found in diagrams.</p> <p></p> <p>Now let's look at the relations we can infer from this diagram.</p> <p></p> <p></p>"},{"location":"onshape/sketching/#other-sketching-features-and-troubleshooting","title":"Other Sketching Features and Troubleshooting","text":"<p>There\u2019re a number of other sketch features in Onshape that allow you to simplify your work and decrease clutter in your sketches.</p> View Video Lesson: Construction Lines, Patterning, Mirroring <p></p> <p>If at any point your sketch becomes too cluttered, you can always right click on sketches in your features tab (left side) and suppress it. This will make the entity invisible until you right click on the tab again and unsuppress it.</p> <p></p>"},{"location":"onshape/sketching/#troubleshooting-sketches","title":"Troubleshooting Sketches","text":"<p>Two common issues encountered while sketching are red entities which occur when an entity is overdefined...</p> Overdefined Sketch <p> This entity has conflicting constraints. It has been defined as having both a 2 and 4 inch radius.</p> <p>...and blue entities, which occur when an entity is underdefined.</p> Underdefined Sketch <p> This entity must be further constrained. It lacks both a side and bottom measurement.</p> <p>Here\u2019re some tips for troubleshooting:</p> <ul> <li>Examine the sketch and look for errors in constraining (dimensioning or relation)</li> <li>If the sketch\u2019s name in the sketch menu and features tab is red, hover over it and check the error message. </li> <li>If your entities are blue, pull on them and see which way they move. You may have broken an existing relation and may need to add new ones.</li> <li>Use the undo button or delete the entities and restart the portion of your sketch.</li> <li>Reload your webpage. Onshape can be buggy sometimes.</li> </ul>"},{"location":"onshape/sketching/#worked-example","title":"Worked Example","text":"View Video Lesson: Sketch Worked Example"},{"location":"onshape/sketching/#resources","title":"Resources","text":"<p>Here is a list of common keyboard shortcuts in Onshape. Memorizing at least some of these as you work will improve your efficiency and save you time.</p>"},{"location":"onshape/sketching/#practice-yourself","title":"Practice Yourself","text":"<p>Try creating some of these sketches on your own!</p> Practice Sketch 1 <p></p> Practice Sketch 2 <p></p>"},{"location":"onshape/useful-shortcuts/","title":"Useful Shortcuts","text":""},{"location":"onshape/useful-shortcuts/#cad-shortcuts","title":"CAD Shortcuts","text":"<p>CTRL + Z Undo: Undoes the most recent action </p> <p>CTRL + Y Redo: Redoes a recently undone action </p> <p>SPACE Clear selection: Clear selection of current item </p> <p>D Dimension: Activates the dimension command</p> <p>E Equal: Makes a selection equal in size to another</p> <p>H Horizontal: Places a selection in the horizontal position </p> <p>V Vertical: Places a selection in the vertical position</p> <p>Q Toggle construction lines: Creates construction geometry</p> <p>F Zoom to fit: Zooms the drawing to fit the screen </p> <p>M Trim: Highlight pieces of a sketch to delete.</p> <p>T Tangent: Make two entities tangent to each other. They \u201cintersect perfectly\u201d.</p> <p>I Coincident: Define two points to occupy the same position.</p> <p>L Line: Create a line.</p> <p>G Rectangle: Create a rectangle.</p> <p>C Circle: Create a circle.</p> <p>A Arc: Create an arc.</p> <p>Esc Escape: Exit out of a menu.</p>"},{"location":"operations/imagery/","title":"Imagery","text":"<p>Welcome to the Imagery section of the Operations Department! Imagery changes every year with new designs, but this BobaDocs page will only consist of the branding standards and images of the boba brand created in 2018.</p> <p>Standards for branding are crucial for creating a recognizable brand and promoting our team. These branding standards are established in order to help unify the team image, provide consistency to team merchandise and materials, and build recognition among other FRC teams and our surrounding community. In addition, we hope that our brand will inspire our students to show spirit for our team. </p> <p>Our brand focuses on a playful and passionate image. Our colors are bright and vibrant, and team imagery emphasizes hand-drawn, simple designs that convey a lighthearted energy. When used appropriately, our standards and guidelines allow for professionalism while retaining the spirit of our team. </p> <p>Due to the importance of a consistent brand, the team brand cannot be majorly changed without the agreement of team leadership. </p>"},{"location":"operations/imagery/#team-name","title":"Team Name","text":"<p>The official name is Boba Bots 253.</p> <p>Acceptable nicknames include:</p> <ul> <li> <p>Boba Bots</p> </li> <li> <p>Team 253</p> </li> <li> <p>Mills Robotics Team</p> </li> <li> <p>Mills Robotics</p> </li> <li> <p>MRT</p> </li> <li> <p>MRT 253</p> </li> </ul> <p>In verbal communication, the team number should be said as \u201ctwo-five-three\u201d or \u201ctwo-fifty-three.\u201d </p> <p>In written communication, the team should be referred to in plural form (\u201cThe Boba Bots are\u201d).</p> <p>The team may not be referred to by any name or nickname that does not reflect a positive team image.</p>"},{"location":"operations/imagery/#team-logo","title":"Team Logo","text":"<p>The official team logo, for use in most situations. The logo should always stand out from the rest of the page: it should be printed on a contrasting background (ideally white), and always have clearance area around it. Care should be taken to make sure the logo remains recognizable and unaltered.</p> <p>Some examples of unacceptable treatments include:</p> <ul> <li> <p>The proportions of the logo should remain the same - it may not be squashed or stretched.</p> </li> <li> <p>The logo should be sized appropriately, at least an inch in width when printed. </p> </li> <li> <p>The logo may not be recolored.</p> </li> </ul>"},{"location":"operations/imagery/#alternative-logos","title":"Alternative Logos","text":"<p>The alternative logos should only be used in specific situations. They should be treated with the same requirements as the standard logo.</p> <p>The hex logo, to be used in situations requiring a single color. This logo may only be used with approval of leadership, in specific situations.</p>"},{"location":"operations/imagery/#team-merchandise","title":"Team Merchandise","text":"<p>Team merchandise includes apparel and buttons and is redesigned every year. Apparel must include team name and number clearly visible on the front. In addition, apparel must also recognize team sponsors. Otherwise, designs may follow relaxed guidelines, but must be approved by leadership or the design team.</p> <p>The team T-shirt should be printed on the Anvil Jersey T-shirt cut in Heather Carribean Blue.</p>"},{"location":"operations/media/","title":"Media","text":"<p>Photography is an art form. We use it day to day with social media platforms, capturing memories for over a century. Many people are starting to embrace photography to capture the moment, with many using their smartphones or GoPro's to record their own daily lives. For others, it's capturing a moment and posting it to show their friends. They don't need to learn how to use it, they just want it to work.</p> <p>The Boba Bots have had a different media person over time, each one with their own talent and each one with their own unique creative-process. People aren't necessarily restricted, nor confined, to the conventions that are within the modern media landscape. Photography is simply a tool to help aid publicity, one of many tools that can be used to help create a team's image. This documentation page is an introduction to advancing your photo taking skills and abilities.</p>"},{"location":"operations/media/#understanding-your-camera","title":"Understanding Your Camera","text":"<p>The basic understanding of your images can be best described by how you interact with your camera. Take for instance, your smartphone. It has a sensor, lenses that distort the image, and a place to store it.</p> <p>Every camera, from the oldest surviving museum pieces to the most expensive on the market, have these three basic necessities. In layman's terms, anyone with no knowledge of a camera can operate it (like a Polaroid). But what changes from a \"smartphone\" image to a \"professional\" image is the person behind it and their understanding of how to use the other components of a camera.</p>"},{"location":"operations/media/#exposing-an-image","title":"Exposing An Image","text":"<p>Inside of a camera, three other components work together to create a \"properly exposed image.\" </p> <p>There is a shutter, an aperture, and a light-sensitive sensor (or film) that create a balanced and exposed image. To tell whether or not your image is properly exposed, there is a meter that tells whether or not the image will be under or overexposed.</p> <p></p> <p>WClarke and Samsara, CC BY-SA 4.0, via Wikimedia Commons</p> <p>Tip</p> <p>The Carmel Clay Public Library in Carmel, Indiana, has a digital resource guide that can help with your understanding of the camera. Their Digital Media Lab offers a Digital Photography Cheat Sheet, open to access for anyone.</p>"},{"location":"operations/media/#shutter-speed","title":"Shutter Speed","text":"<p>Like how your eyelids cover your eyes, shutter speed is a set amount of time that light is being introduced to the sensor. In many cameras, shutter speed is defined by \"1/x\". This is the movement of a \"door\" that allows light to pass through to the sensor for a set amount of time. </p> <p>For a better explanation, let's use film as a better example. Film is a very delicate material that is extremely sensitive to light. It absorbs light through a lens for the length of time the shutter is open and then is locked out. Brighter colors are absorbed quicker, while darker colors take a little longer. Because of these varying colors, the light creates an image with a lot of contrast. If exposed to light for a prolonged amount of time, the film may overexpose and any contrast originally set by the original opening of light is gone.</p> <p>Shutter speed is a very important factor when considering what an image should look like. Shutter speed can make an image extremely blurry or still. At a FRC competition, people are moving a lot. A slow shutter speed can make your robot look like it's in a hurry, or just completely shaky and blurry. A fast shutter speed can make your robot still, or convey an actionless robot.</p> <p>Tip</p> <p>Use the Dima Exposure Triangle Simulator 3.0 to help aid your understanding of shutter speed. Notice how the ducks are blurry when you set a \"slow\" shutter speed and how the ducks are perfectly still when you set a \"fast\" shutter speed. This simulation is slightly overexagerated, as ducks do move faster than robots. (The exposure meter is located on the top right of the image.)</p> <p>This image was taken with a slow shutter speed. Notice how the ball is \"shooting out\" and the ball isn't still in mid-air. The robot is stationary, which means that when the shutter was up, the robot wasn't moving.</p> <p>This image was taken with a fast shutter speed. The subjects are still and no one has any \"ghosting\" artifacts on them.</p>"},{"location":"operations/media/#aperture","title":"Aperture","text":"<p>Aperture is the amount of light being brought in by a lens. A major component of portrait photography, aperture is mainly used to create background blur, or depth of field. Aperture is usually expressed in \"f/x\" and the smaller the number is the more open the blades are.</p> <p>In many instances of event photography, aperture is not a necessary component to taking photos. A smaller aperture can help sharpen the photos, but it comes at a compromise of having to lower shutter speed or increase light sensitivity. (Light sensitivity, or ISO, is explained in the next section.)</p> <p></p> <p>Cbuckley, CC BY-SA 3.0, via Wikimedia Commons</p> <p>Tip</p> <p>For this section, use the Andersen Exposure Simulator to help aid your understanding of aperture.</p>"},{"location":"operations/media/#iso","title":"ISO","text":"<p>The term ISO, which is an abbreviation of the International Organization for Standardization, is used in the photography world to define a film or sensor's sensitivity to light. The higher the sensitivity, the more \"grain\" or \"noise\" an image has.</p> <p>Take for instance, a night-time photo. Under bright circumstances, an image can be exposed properly without the need to increase the sensitivity. But with a night-time photo, the physical limitations of a lens (aperture) and the limitations of a slow shutter speed require a third variable to change. This would be the ISO. By boosting the ISO, the shutter speed can keep a subject still or an image sharp. This comes at a cost though, as your image will begin to look grainier and details will begin to \"smooth out\" and deteriorate. When exposing an image, consider balancing out shutter speed and aperture first, before considering increasing your camera's sensitivity to light.</p> <p>Tip</p> <p>In the Andersen Exposure Simulator, setting it to manual and putting the ISO to the highest level will help explain the adverse effects of increasing the light sensitivity. Be sure to balance out the shutter speed and aperture to properly show an image.</p>"},{"location":"operations/media/#composition","title":"Composition","text":"<p>Composition is very important. Comparisons between \"amateur versus professionals\" always depend on how one composes their image. One can have a great camera, but poor composition ruins it. Like buying a $2,000 computer, but using it for tetris.</p> <p>Basic composition consists of the \"rule of thirds\" and balancing the image. Rule of thirds can be particularly useful in creating a balance in a photo, such as a close object versus a far object. It can create more interesting photos, compared to having an object in the center of an image. The rule of thirds can be applied in many artistic applications, not just photography.</p> <p></p> <p>Tadrart01.JPG: Pir6monderivative work: Teeks99, CC BY-SA 3.0, via Wikimedia Commons</p> <p>Composition also consists of getting the angle right and finding the best position to take the photo. With the right blend of a lens, photos can take on different meanings. For example, the photo below was taken during CalGames 2022. The person in the middle is strategizing for the next match, whilst on the side the teacher mentor and another member are discussing strategy. This image was deliberately framed to feel intense, but if taken from their bleacher level the image wouldn't feel the same.</p>"},{"location":"operations/media/#equipment","title":"Equipment","text":"<p>Cameras are very expensive tools. The camera body should not be of concern, but the lenses are the most important. Camera bodies are capable of producing good images, but lenses are the ones creating sharp images. When creating this purchasing decision, the lens will always be the one that will help in the future.</p>"},{"location":"operations/media/#camera-body","title":"Camera Body","text":"<p>The \"big three\" camera companies are:</p> <ul> <li> <p>Canon</p> </li> <li> <p>Nikon</p> </li> <li> <p>Sony</p> </li> </ul> <p>There are other companies that produce more \"photo\" or \"video\" orientated cameras as well. FujiFilm has great photo-based cameras, but they have yet to improve in video. Panasonic has great video-based cameras (with unrivaled stabilization), but it lacks decent photo-taking capabilities. Leica is expensive. Pentax is old.</p> <p>When it comes to \"DSLR vs Mirrorless'', mirrorless development will continue and DSLR production will inevitably stop. The idea of a resurgence of DSLR isn't entirely impossible, but the feel of an old DSLR stems from the 2000's.</p> <p>Camera bodies also differ in sensor size, with full frame and APS-C. Full frame, or 35mm, is a form factor commonly used for photography due to its low light capabilities. APS-C is a smaller form factor that's common for nature and wildlife photography. Every camera manufacturer, except Canon, is a 1.5x crop compared to full frame. Canon has a 1.6x crop. This means that the focal length of a full frame lens changes by that specific amount. Full frame is very much ideal as it is the successor to 35mm film, with many lenses that were designed for the sensor size over the past century.</p>"},{"location":"operations/media/#lenses","title":"Lenses","text":"<p>Lenses can vary as each one has its own unique capabilities. When purchasing a lens, purchase one with the correct lens mount. Each lens also has its own field of view, with a wide lens having a wider field of view and telephoto lens having a tighter field of view. Camera lenses have differing perspectives, with a difference in wide and tele lenses. Understanding perspectives is very important when beginning portrait photography, but it is not as important in event photography.</p> <p>Lenses differ in prices due to its sharpness and its \"glass\". Cheaper lenses are not as sharp, with chromatic aberration and softness on edges and corners. Lenses are the most important component to an image, as a cheap body and expensive lens produce better results than an expensive body and a cheap lens.</p> <p>There are more important factors when it comes to purchasing the right camera and lens, such as framerate, megapixel count, and autofocus. With a decent framerate, moderate (20+) megapixel, and decent autofocus (Canon, Sony, or Nikon), deciding the right camera shouldn't be an issue. Full frame is ideal due to its low light capabilities, but prices for mirrorless full frame cameras are pricey. A decent standard zoom lens and a telephoto lens is also important, with 200mm max as a decent length for full frame. </p>"},{"location":"operations/media/#other-resources","title":"Other Resources","text":"<p>With a valid SMCL (San Mateo County Libraries) card, LinkedIn Learning resources are available for anyone to access. There are a variety of courses that can teach photography, videography, as well as advancing management skills and more. Treat these courses are visual guides to help aid your understanding of photography or videography, it is better to practice photography than watch it.</p> <p>Courses recommended are:</p> <ul> <li>Introduction to Photography - Ben Long</li> <li>Photography 101 - Joseph Linaschke</li> </ul> <p>If you would like to access LinkedIn Learning, go to https://www.linkedin.com/learning-login/go/smcl.</p> <p>Adobe, Nikon and B&amp;H also cover the topics above, albeit with a bias to sell camera equipment and products.</p>"},{"location":"programming/collaboration/","title":"Git and Github","text":"<p>Git is a tool our software team uses to collaborate</p> <ul> <li>Intro to git</li> </ul>"},{"location":"programming/collaboration/#github-practices","title":"Github Practices","text":"<p>The following is a set of guidelines for contributing on Github for our team. These are guidelines, not hard rules.</p> <ul> <li>The <code>master</code> branch is for competition ready code only. Do not use master for testing.</li> <li>The <code>development</code> branch should consist of relatively recent development code. Experimental code should be branched off of here. Merge into the development branch if your code is deployable and tested. </li> <li>If writing test code, create a new branch or add onto another.</li> <li>The <code>README</code> should be updated with useful information about the repository or programming team (ie. branch descriptions, checklists, etc.)</li> <li>Write useful commit messages; Describe what changes you made. (&lt;action&gt;, &lt;changes&gt;) is a good format. For example, <code>\"add initial drivetrain logic\"</code> is good, <code>\"robot drive haha yes\"</code> is not good.<ul> <li>Keep commit messages in present-tense. ie: \"Added shooter PID\" should instead be <code>\"Add shooter PID\"</code></li> </ul> </li> </ul>"},{"location":"programming/faq/","title":"FAQ","text":"<p>This section outlines commonly asked questions about the robot's code</p>"},{"location":"programming/faq/#vscode","title":"VSCode","text":""},{"location":"programming/faq/#what-is-vendordeps","title":"What is \"vendordeps\"?","text":"<p>The <code>vendordeps/</code> folder in our robot code contains <code>.json</code> files that identify third party libraries we use. You can read more about it here.</p>"},{"location":"programming/git-flow/","title":"Git Flow","text":"<p>Read about the Github flow here.</p> <p>When you are done reading, let's practice using the Github flow a bit. We'll be using the TrainingRobot repo from the previous section to do this.</p> <ol> <li>On the left side of the bottom bar in VSCode, click on \"master\" and then \"+ Create new branch\" and name it whatever you want. </li> <li>Stage, commit, and push the changes you made in the previous pages. (You may want to refer back to the Version Control page of Intro to Git to refresh on how to do that). </li> <li>Go to the repo for the TrainingRobot on Github and create a new pull request with the branch you just created. (make sure you're logged in)</li> </ol> <p>In the pull request, people can add comments, review the code, and merge the code into our <code>master</code> branch. This is how we make sure all the code that we put on our robot works and meets our quality standards. We won't be merging your code in this time around, but let a programming lead or mentor know once you get to this step so we can check you off.</p>"},{"location":"programming/intro-to-robot-code/","title":"Intro to Robot Code","text":""},{"location":"programming/intro-to-robot-code/#setup","title":"Setup","text":"<p>In order to write and run robot code, we will need to install a few pieces of software.</p>"},{"location":"programming/intro-to-robot-code/#wpilib","title":"WPILib","text":"<p>The WPILib suite installs the IDE we write our code in as well as the tools needed to run and deploy that code to the robot.</p> <p>Follow the instructions on the official WPILib documentation for your respective OS. This will install WPILib and all its required tooling, as well as the VSCode IDE that we use to write code.</p>"},{"location":"programming/intro-to-robot-code/#git-and-github","title":"Git and Github","text":"<p>We use Git and Github to keep track of and collaborate on code.</p> <p>Follow the instructions for your respective OS to download Git.</p> <p>If you do not have a Github account, create one now.</p> <p>Once you have your account, tell a programming mentor or programming lead your username so they may add you to our GitHub organization.</p> <p>Next, set up your username (your real name) and email in Git by following these instructions:</p> <ul> <li>Setting your username in Git</li> <li>Setting your email address in Git</li> </ul>"},{"location":"programming/intro-to-robot-code/#creating-a-robot-project","title":"Creating a robot project","text":""},{"location":"programming/intro-to-robot-code/#with-vscode","title":"With VSCode","text":"<p>Bring up the Visual Studio Code command palette with Ctrl+Shift+P:</p> <p></p> <p>Then, type \u201cWPILib\u201d into the prompt. Since all WPILib commands start with \u201cWPILib,\u201d this will bring up the list of WPILib-specific VS Code commands:</p> <p></p> <p>Now, select the \u201cCreate a new project\u201d command:</p> <p></p> <p>This will bring up the \u201cNew Project Creator Window:\u201d</p> <p></p> <p>Some elements we care about are explained below:</p> <ol> <li>Project Type: The kind of project we wish to create. Usually we want <code>template</code>.</li> <li>Language: The language (C++ or Java) that will be used for this project. We will be using Java.</li> <li>Project Base: The base class or example to generate the project from. Our team uses <code>Command Robot</code>. You can find the templates here and examples here.</li> <li>Project Location: This determines the folder in which the robot project will be located.</li> <li>Create New Folder: If this is checked, a new folder will be created to hold the project within the previously-specified folder. If it is not checked, the project will be located directly in the previously-specified folder. An error will be thrown if the folder is not empty and this is not checked. You almost always want this to be checked.</li> <li>Project Name: The name of the robot project. This also specifies the name that the project folder will be given if the Create New Folder box is checked. Our code for each year is named with the format <code>Code&lt;year&gt;</code> ie: <code>Code2020</code>.</li> <li>Team Number: The team number for the project, which will be used for package names within the project and to locate the robot when deploying code. Our team number is <code>253</code>.</li> </ol> <p>Once all the above have been configured, click \u201cGenerate Project\u201d and the robot project will be created.</p>"},{"location":"programming/intro-to-robot-code/#opening-the-new-project","title":"Opening The New Project","text":"<p>After successfully creating your project, VS Code will give the option of opening the project as shown below. We can choose to do that now or later by typing Ctrl+K then Ctrl+O (or just Cmd+O on macOS) and select the folder where we saved our project.</p> <p>Once opened, we will see the project hierarchy on the left. Double-clicking on a file will open that file in the editor.</p>"},{"location":"programming/intro-to-robot-code/#project-structure","title":"Project Structure","text":"<p>A typical robot project may look like this: <pre><code>Code2020/\n\u251c\u2500\u2500 build.gradle\n\u251c\u2500\u2500 gradle/\n\u251c\u2500\u2500 gradlew\n\u251c\u2500\u2500 gradlew.bat\n\u251c\u2500\u2500 settings.gradle\n\u251c\u2500\u2500 src/main/java/frc/robot/\n\u2502   \u251c\u2500\u2500 Constants.java\n\u2502   \u251c\u2500\u2500 Main.java\n\u2502   \u251c\u2500\u2500 Robot.java\n\u2502   \u251c\u2500\u2500 RobotContainer.java\n\u2502   \u251c\u2500\u2500 commands/\n\u2502   \u2502   \u251c\u2500\u2500 ConveyorQueue.java\n\u2502   \u2502   \u251c\u2500\u2500 Drive.java\n\u2502   \u2502   \u251c\u2500\u2500 Shoot.java\n\u2502   \u2502   \u2514\u2500\u2500 VisionTrack.java\n\u2502   \u2514\u2500\u2500 subsystems/\n\u2502       \u251c\u2500\u2500 Arm.java\n\u2502       \u251c\u2500\u2500 Climber.java\n\u2502       \u251c\u2500\u2500 Conveyor.java\n\u2502       \u251c\u2500\u2500 Drivetrain.java\n\u2502       \u251c\u2500\u2500 Intake.java\n\u2502       \u2514\u2500\u2500 Shooter.java\n\u2514\u2500\u2500 vendordeps/\n    \u251c\u2500\u2500 Phoenix.json\n    \u251c\u2500\u2500 REVColorSensorV3.json\n    \u251c\u2500\u2500 REVRobotics.json\n    \u251c\u2500\u2500 WPILibNewCommands.json\n    \u251c\u2500\u2500 WPILibOldCommands.json\n    \u2514\u2500\u2500 navx_frc.json\n</code></pre></p> <p>It's a lot, so let's break it down. This is an intro to our robot structure, so we won't go into specifics on how to actually write the code until the next section.</p>"},{"location":"programming/intro-to-robot-code/#gradle","title":"Gradle","text":"<p>When creating a robot project, Gradle will automatically generate the files <code>build.gradle</code>, <code>gradle/</code>, <code>gradlew</code>, <code>gradlew.bat</code>, <code>settings.gradle</code>. You shouldn't ever need to touch these. Your IDE may also generate the folders <code>bin/</code>, <code>build/</code>, <code>.wpilib/</code>, <code>.vscode/</code>, and <code>.idea/</code>. It's safe to ignore these files as well.</p>"},{"location":"programming/intro-to-robot-code/#vendordeps","title":"vendordeps","text":"<p>The <code>vendordeps/</code> folder in our robot code contains <code>.json</code> files that identify third party libraries we use. You can read more about it here.</p>"},{"location":"programming/intro-to-robot-code/#src","title":"src","text":"<p>Just like any other Java project, the <code>src/</code> directory holds all of our actual code.</p> <pre><code>src/main/java/frc/robot/\n\u251c\u2500\u2500 Constants.java\n\u251c\u2500\u2500 Main.java\n\u251c\u2500\u2500 Robot.java\n\u251c\u2500\u2500 RobotContainer.java\n\u251c\u2500\u2500 commands/\n\u2502   \u251c\u2500\u2500 ConveyorQueue.java\n\u2502   \u251c\u2500\u2500 Drive.java\n\u2502   \u251c\u2500\u2500 Shoot.java\n\u2502   \u2514\u2500\u2500 VisionTrack.java\n\u2514\u2500\u2500 subsystems/\n    \u251c\u2500\u2500 Arm.java\n    \u251c\u2500\u2500 Climber.java\n    \u251c\u2500\u2500 Conveyor.java\n    \u251c\u2500\u2500 Drivetrain.java\n    \u251c\u2500\u2500 Intake.java\n    \u2514\u2500\u2500 Shooter.java\n</code></pre>"},{"location":"programming/intro-to-robot-code/#mainjava","title":"Main.java","text":"<p>This file is autogenerated, and there is rarely any reason to touch this file at all.  It contains the classic <code>main</code> method, which is run at startup and starts up the rest of the robot code.</p>"},{"location":"programming/intro-to-robot-code/#robotjava","title":"Robot.java","text":"<p>This file is the control center of the robot. It has the methods that are called to run the robot. Documentation on each of the methods within it can be found here.</p>"},{"location":"programming/intro-to-robot-code/#constantsjava","title":"Constants.java","text":"<p>This file contains all the numbers that don't change and are relevant to the whole robot.  This includes all ports and joystick buttons, which correlate to motor controllers, solenoids, and commands in the code.</p>"},{"location":"programming/intro-to-robot-code/#robotcontainerjava","title":"RobotContainer.java","text":"<p>This is where we create and store the objects for the subsystems, and set up all the controller and joystick commands that the driver uses to operate the robot. It does not extend from any superclasses, and is mainly used as a way to separate code from <code>Robot.java</code></p>"},{"location":"programming/intro-to-robot-code/#commands","title":"commands/","text":"<p>Commands are what run the robot. For example, there may be a <code>RunIntake</code> command that runs two motors to turn the wheels that intake a game piece.</p>"},{"location":"programming/intro-to-robot-code/#subsystems","title":"subsystems/","text":"<p>Subsystems are another name for robot mechanisms, such as a drivetrain, a shooter, an intake, or a climber. The subsystem classes contain the Objects for the motor controllers and solenoids and have methods for controlling the subsystem, which are used by commands.</p>"},{"location":"programming/intro-to-robot-code/#deploying-code-to-the-robot","title":"Deploying code to the robot","text":"<p>Note</p> <p>Deploying code to the RoboRIO only works on a Windows computer; however, you can still build your code to see if it compiles correctly.</p> <p>Now that you've created a robot project, you may want to deploy your code to the robot. In order to do this you'll need a few things:</p> <ul> <li>A Windows computer with the driver station software installed</li> <li>A RoboRIO connected to an electronics board (radio optional) and a battery<ul> <li>If you do not have the radio, have a USB-B cable handy to connect your computer to the RIO</li> </ul> </li> </ul> <p>With the radio: Disconnect from your wifi network and connect to the radio's wifi network.</p> <p>Without the radio: Plug the computer into the RoboRIO using a USB-B cable.</p> <p>Now that you're connected, it's time to actually deploy your code. Follow the WPILib instructions to deploy your code to the robot. </p>"},{"location":"programming/intro-to-robot-code/#writing-robot-code","title":"Writing robot code","text":"<p>Now you know how to deploy your code. Let's learn how to interact with physical components of the robot.</p>"},{"location":"programming/intro-to-robot-code/#javadocs","title":"Javadocs","text":"<p>Java has a standard documentation format that is autogenerated from documentation comments in the code.  We will be referencing them extensively to write our code.</p> <p>On top of a Javadoc contains a description of the class, its package, what it inherits, and more.  Below that is a section containing the class' constructors, and the section below contains the methods you can call from that class.  If you click on any of the constructors or methods, you get directed to a section with more details about what you clicked.  Here's a Javadoc of a class you should be familiar with: ArrayList.</p>"},{"location":"programming/intro-to-robot-code/#wpilib_1","title":"WPILib","text":"<p>WPILib is the name of the library FRC provides us to control the robot with.  Its JavaDocs are located here (and you can also find a link to them in the Resources page of this site).  We will be mostly using the library's <code>edu.wpi.first.wpilibj</code> package, and you can search for a class or method using the search bar located in the top right corner of the javadocs page.</p>"},{"location":"programming/intro-to-robot-code/#practice","title":"Practice","text":"<p>First has a pretty good write-up on command-based programming, so we'll read that. Once you're done, we'll practice writing some basic commands.</p> <p>Before you start</p> <p>If you have access to a robot and would like to test your code, you will need the following items:</p> <ul> <li>items from the previous section</li> <li>an Xbox controller</li> <li>a Talon SRX</li> <li>a brushless motor</li> </ul> <p>Ask your teammates in the electronics department for help :)</p> <p>If you are new to git, read the intro to git section before proceeding.</p> <p>Clone the TrainingRobot project, and open it in VSCode. You can check if you have got the right project open by deploying the project to the robot and pressing the X button on the controller. If the motor spins, you've got the right code!</p> <p>Note</p> <p>VSCode may prompt you to \"import project to 2020\". Don't do this.</p> <p>Warning</p> <p>Please don't actually push any of your changes to the Github repository.</p>"},{"location":"programming/intro-to-robot-code/#part-1-basic-io","title":"Part 1: Basic IO","text":"<p>Let's change the button to trigger the command continuously while it's held rather than when it's pressed.</p> <p>In the <code>TrainingRobot</code> project, find the <code>RobotContainer.java</code> file (<code>src/main/java/frc/robot/RobotContainer.java</code>). Currently, line 51 contains the method <code>whenPressed()</code>. Refer to the WPILib Javadocs to determine what you need to change <code>whenPressed()</code> to in order to run the command while the button is pressed.</p> Hint <p><code>controller_X</code> is an instance of the <code>JoystickButton</code> class.</p> <p>In the same project, you'll find the <code>RunMotor.java</code> file in the <code>commands/</code> directory.  In the <code>RunMotor</code> class, the <code>end()</code> method is currently empty. Add code to it that stops the motors.</p> Hint <p>You might want to write something similar to what's in <code>execute()</code>.</p> <p>Once you think you figured it out, follow the above Deploying robot code section again to deploy, and see if your code worked!</p> Solutions <code>RobotContainer.java</code> <pre><code>private void bindIO() {\ncontroller_X.whileHeld(new RunMotor(motors));\n}\n</code></pre> <code>commands/RunMotor.java</code> <pre><code>@Override\npublic void end(boolean interrupted) {\nmotors.run(0);\n}\n</code></pre>"},{"location":"programming/intro-to-robot-code/#part-2-default-commands","title":"Part 2: Default commands","text":"<p>Right now, our motor only has two states: half power, or completely off.  Let's make the motor's speed correspond to more granular controller input using a joystick.</p> <p>Again in the <code>RobotContainer.java</code> file, modify the <code>bindIO()</code> method to set the default command of the <code>Motors</code> subsystem to the <code>RunMotors</code> command.</p> Hint <p>Get the joystick's Y-value from the <code>XboxController</code> we already have defined.</p> Hint <p><code>Motors</code> is an implementation of the <code>Subsystem</code> interface.</p> <p>Pass the <code>Motors</code> subsystem into the command and have it drive the motors to the Y-value of the joystick when executed. Use the prewritten code, the command-based programming tutorial, and the WPILib JavaDocs for help.</p> Example Solution <p>This is one way to implement this step. Yours may look a little different, but the same logic should appear here.</p> <code>Robotcontainer.java</code> <pre><code>import edu.wpi.first.wpilibj.GenericHID;\n\nprivate void bindIO() {\nmotors.setDefaultCommand(new RunMotor(motors));\n}\n\npublic static double getMotorSpeed() {\n// the vertical axis of the left joystick of the XboxController\nreturn controller.getLeftY();\n}\n</code></pre> <code>commands/RunMotor.java</code> <pre><code>import frc.robot.RobotContainer;\n\n@Override\npublic void execute() {\nmotors.run(RobotContainer.getMotorSpeed());\n}\n</code></pre> <p>Again, deploy your code to the robot to see if it worked! Once you're satisfied with your changes, read the Git Flow page to push your changes.</p>"},{"location":"programming/learn-java/","title":"Introduction","text":"<p>Hi. Welcome to the Programming section of the BobaDocs!</p> <p>Before you get started, let me just say this: We are moving at a significantly faster pace than any computer science course offered at the school, and it's okay to get stuck or not know something.  The Programming team veterans are here to help, please ask us questions! This is pretty difficult stuff, but I guarantee that it will be worth it and that we'll make it through together.</p>"},{"location":"programming/learn-java/#learning-java","title":"Learning Java","text":"<p>Java is the programming language used by most FRC teams to program their robot. Other languages include C++ and Python. For the sake of convenience, our team writes our robot code in Java.</p> <p>If you are not yet proficient enough to pass the AP Computer Science A exam, you should take the Codecademy Java course found here: https://www.codecademy.com/learn/learn-java.</p> <p>This course will walk you through the basics of Java and Object-Oriented Programming that you will need for FRC programming. It will take approximately three weeks, split up into the following sections:</p> <p>Week 1:</p> <ul> <li>Hello World</li> <li>Variables and Data Types</li> <li>Object-Oriented Java</li> </ul> <p>Week 2:</p> <ul> <li>Conditionals and Control Flow</li> <li>Arrays and ArrayLists</li> <li>Loops</li> </ul> <p>Week 3:</p> <ul> <li>(Optional) String methods</li> <li>Inheritance and Polymorphism</li> <li>Debugging</li> </ul> <p>Warning</p> <p>Do not do the \"Pro\" sections; they're not necessary and will slow you down.</p>"},{"location":"programming/learn-java/#java-learning-resources","title":"Java Learning Resources","text":""},{"location":"programming/learn-java/#official-documentation","title":"Official documentation","text":"<ul> <li>Official tutorial</li> </ul>"},{"location":"programming/learn-java/#for-complete-beginners-to-programming","title":"For complete beginners to programming","text":"<ul> <li>APCS Textbook</li> <li>Free Codecademy Java course</li> <li>A playlist of YouTube videos on Java</li> </ul>"},{"location":"programming/learn-java/#for-people-who-know-programming-already","title":"For people who know programming already","text":"<ul> <li>https://learnxinyminutes.com/docs/java/</li> <li>Java Curriculum Review by Jakin Chan</li> </ul>"},{"location":"programming/learn-java/#exercises-practice-makes-better","title":"Exercises (practice makes better)","text":"<ul> <li>https://practiceit.cs.washington.edu/</li> <li>https://www.codewars.com/?language=java</li> <li>https://codingbat.com/java</li> </ul>"},{"location":"programming/resources/","title":"Resources","text":""},{"location":"programming/resources/#team-resources","title":"Team Resources","text":"<ul> <li>Boba Bots Github</li> </ul>"},{"location":"programming/resources/#wpilib","title":"WPILib","text":"<p>WPILib provides the core libraries for creating robot programs with the roboRIO. WPILib uses Gradle to build and deploy code.</p> <p>Info</p> <p>FRC Robots will transition to a new robot controller for the 2021 season, developed by REV Robotics. This may significantly change the way you interact with the controller.</p> <ul> <li>WPILib Docs</li> <li>WPILib Github/Example Code</li> <li>WPILib Java Docs</li> </ul>"},{"location":"programming/resources/#ctre","title":"CTRE","text":"<p>CTRE provides various electrical components and software libraries for FRC (e.g. TalonSRX, Falcon 500, CANifier, Phoenix Tuner). Software downloads can be found under the technical resources section of their respective product page. </p> <ul> <li>Product Website</li> <li>CTRE Phoenix Docs</li> <li>CTRE Java Docs</li> <li>Github/Example Code</li> </ul>"},{"location":"programming/resources/#rev-robotics","title":"REV Robotics","text":"<p>REV Robotics provides various electrical components and software libraries for FRC (e.g. SPARK MAX, NEOs, Through-bore Encoder). Note that REV Robotics provides documentation on a part by part basis, rather than centralizing their documentation.</p> <ul> <li>Product Website</li> <li>SPARK MAX Documentation</li> <li>REV Documentation</li> <li>REV Examples</li> <li>REV Java Docs</li> </ul>"},{"location":"programming/resources/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>navX(Gyroscope)</li> <li>PathWeaver(Autonomous)</li> <li>Limelight(Vision)</li> <li>PID Demo</li> <li>Scouting Web-App(WIP) Demo</li> </ul>"},{"location":"programming/version-control/","title":"Intro to Git & Github","text":"<p>So you know how to write Java code, and you know the basics of how our robot code is written. Now, you might be wondering, how do we collaborate and write code as a team? Surely, we don't take turns passing around a computer to type in our lines. Enter version control.</p> <p>Here's a handy article about it. Stop at the steps, you don't need to do them.</p> <p>Once you're done, we'll do some exercises to see if you've got it.</p> <p>Note</p> <p>We'll be using VS Code's built-in version control tools in this tutorial, but there are many other good tools too, including Sourcetree, Github Desktop, Gitkraken, and of course, the ol' command line.  You don't need to know how to use the command line for FRC, but it's a useful, if not essential, skill if you want to go beyond.</p>"},{"location":"programming/version-control/#practice","title":"Practice","text":"<p>VS Code is the text editor we will be using to write and run our code, and should have been installed with the WPILib suite during setup.  Open up VS Code and follow the \"Cloning a repository\" section of the VS Code git tutorial to clone this repo.</p> <p>Navigate to this file in the repo (<code>docs/programming/version-control.md</code>) and add your name to the list below.</p> <p>People who have added their name</p> <p>  Example, Sebastian Law, Nathan Choi, William Bruce, James Rea, Wesley Tam, Ronit Barman, Sabien Nguyen, Tyler Sheridan, Sabrina Li, Johnathon Zheng, Kenny Xie, Joe Mamma, Hem Dadlani, Cary Yeung, Becky Liu, Ryan Chan, Ray Chang, Jayce Gu, Ian Lin \u00b0o\u00b0, Kaden Chow ._., Michelle Yeung,  Don Huang,</p> <p>Now stage and commit your changes with the message <code>add [your name]</code>, and then push your changes. Refer to the Git tutorial and VS Code tutorial if needed.</p> <p>Tip</p> <p>By convention, commit names are in simple present tense. Things like <code>add name</code> or <code>fix these bugs</code> or <code>update readme</code>.  You are expected to write descriptive commit messages that follow this convention.</p>"},{"location":"programming/troubleshooting/common-issues/","title":"Common Issues","text":"<p>Below are common issues programmers face, sorted by problem type. Use the table of contents to navigate.</p> <p>Restart</p> <p>Code, electronics, and the robot can randomly stop working for no apparent reason. Consider restarting your computer, code, robot, or other components before attempting more intrusive troubleshootting steps.</p> <p>Software Updates</p> <p>The issue you found might be a commonly reported bug and has already been fixed in the latest version. Check the manufacturer's github or website to view the changelog and update.</p>"},{"location":"programming/troubleshooting/common-issues/#robot-operation","title":"Robot Operation","text":""},{"location":"programming/troubleshooting/common-issues/#packet-loss","title":"Packet Loss","text":"<p>Issue: Loss of control of robot (jerkiness); significant delay between joystick input and corresponding action; sudden robot movements when no input is being applied. The Driver Station log file reports packet loss with orange bars with respect to time.</p> <p></p> <p>Cause: Lost communication packets between your computer/FMS and your robot's radio and roboRIO. Additionally, your robot could have lost power for a brief period before reconnecting.</p> <p>Solution:</p> <ul> <li>During Competition Matches: Contact the field FTA/FTAA for assistance</li> <li>All other situations:<ul> <li>Reduce surrounding wireless interference (hotspots/Wifi APs)</li> <li>Switch to a wired connection via USB or Ethernet      </li> <li>Make sure the driver station laptop's battery mode is set to Performance and not Battery Saver</li> <li>Check power/data connections between radio and VRM, radio and roboRIO, battery to VRM, and battery to roboRIO</li> <li>Check that the ethernet port the router is connected to is not loose (consider hotgluing the connection for competition)</li> <li>Restart router/roboRIO</li> <li>Check for your code. Certain processes can lead to high packet loss. Common culprits include USB Cameras, badly configured PID loops, logging functions, etc. It's likely that the <code>periodic()</code> loop is taking longer than 20ms to execute</li> </ul> </li> </ul>"},{"location":"programming/troubleshooting/common-issues/#no-communication","title":"No Communication","text":""},{"location":"programming/troubleshooting/common-issues/#programming","title":"Programming","text":""},{"location":"programming/troubleshooting/common-issues/#startcompetiton","title":"startcompetiton()","text":""},{"location":"programming/troubleshooting/common-issues/#limelight","title":"Limelight","text":""},{"location":"programming/troubleshooting/common-issues/#pid","title":"PID","text":""},{"location":"programming/troubleshooting/common-issues/#can","title":"CAN","text":""},{"location":"programming/troubleshooting/common-issues/#electrical","title":"Electrical","text":""},{"location":"programming/troubleshooting/common-issues/#battery","title":"Battery","text":"<p>Issue: Robot is browning out and/or behaving erratically when running the robot.</p> <p>Cause: Low battery voltage or worn out battery. Alternatively, a motor is stalling.</p> <p>Solution: Replace the battery with a fresh one from the battery charging station. Use a battery beak to check charge % (Full Charge is 130%) and battery resistance. </p> <p>Battery Tips</p> <ul> <li>Full Charge: 130% (Anything over 115% should be enough)</li> <li>Lower internal battery resistance is better (&lt;0.025 ohm)</li> <li>Check the Driver Station Log File for diagnostic information for battery voltage and power delivery via the PDP</li> <li>Use separate batteries for competition and practice/testing</li> </ul>"},{"location":"programming/troubleshooting/common-issues/#compressor","title":"Compressor","text":"<p>Issue: Compressor refusing to run even after checking the wiring and pneumatic system.</p> <p>Solution: Make sure that the default compressor settings are not being overridden. Specifically, check that <code>compressor.stop()</code> is not present, as this will disable the automatic pressure control of the Pneumatics Control Module (PCM)</p> <p>Compressors do not need to be instantiated to function at a basic level. Refer to the Javadocs to learn about advanced compressor functionality.</p>"},{"location":"programming/troubleshooting/problemsolving/","title":"Troubleshooting","text":"<p>In robotics, troubleshooting is a crucial part in insuring that your code, electronics, and design performs as expected. As a result, its important to use problem-solving skills to identify, understand, and rectify various bugs and hitches that will undoubtedly occur. As you build systems that are increasingly complex, a methodology for troubleshooting should be followed to decrease time wasted and frustration.</p> <p>Below are steps that one should consider while troubleshooting:</p> <ol> <li> <p>Identify the source of the issue.</p> <ul> <li>Problems can arise from all sorts of places, whether it be programming, electrical, mechanical, or a combination of them all.</li> <li>Like diagnosing a patient, you should find what's causing the symptoms (problems) to manifest themselves. Re-creating the issue can be helpful, espeically when the problem is programming related.</li> <li>Create a backup before making any changes, just in case something goes wrong.</li> </ul> </li> <li> <p>Establish a theory of probable cause.</p> <ul> <li>Once a problem has been identified, establish a ranked list of probable causes based on information gathered and your own technical knowledge. The way subteams are divided makes it essential to work together with others within and outside the programming subteam.</li> <li>Don't Tunnel Vision. It's easy to overlook the most elementary problems when working with complex systems.</li> </ul> </li> <li> <p>Test your theory to determine that actual cause.</p> <ul> <li>Go through the list of probable causes and test them to determine the true underlying issue.</li> </ul> </li> <li> <p>Issue a Fix.</p> <ul> <li>Develop and execute an appropriate fix to the issue.</li> </ul> </li> <li> <p>Verify functionality.</p> <ul> <li>Ensure the problem has been resolved and the system performs as designed. Side effects should be minimized.</li> <li>Implement measures to prevent the issue from happening again.</li> </ul> </li> <li> <p>Document the issue and process.</p> <ul> <li>Chances are the issue will pop up again. Documenting the process and issue allows others to quickly resolve the issue without frustration. This can save time during future troubleshooting and prevent others from taking the same missteps you may have taken.</li> </ul> <p>Tip</p> <p>Add your documented issues to the common issues page for others to reference.</p> </li> </ol> <p>Additional Resources:</p> <ul> <li>Guide to Debugging Things by Eric Xiao</li> <li>WPILIB Debugging a Robot Program</li> </ul>"},{"location":"robots/2020/","title":"2020 Robot Overview (Tea3PO)","text":""},{"location":"robots/2020/#design-priorities","title":"Design Priorities","text":""},{"location":"robots/2020/#goal","title":"Goal","text":"<p>Make it to playoffs at a regional level.</p>"},{"location":"robots/2020/#expected-capabilities","title":"Expected Capabilities","text":"<p>Here are our expected capabilities for alliance robots during the playoffs. Our robot is designed around being a first pick.</p> Ability Top 4 Alliance Captain First Pick Second Pick Climbing Climb power switch with leveling/even out capability/buddy climb Climb power switch and stay there Climb power switch and stay there Spin/Rotational Control Spin control panel with both positional and rotational control Spin control panel with rotational control Scoring Consistency Score high goal nearly every time Score high goal consistently Play defense or score on low goal Scoring Quantity Score three or more balls in high goal during autonomous period Score three balls in high goal during autonomous period Score on low goal during autonomous Number of Balls Stored Pick up and store five balls at a time Pick up and store five balls at a time Floor Intake Intake balls from the floor Intake balls from the floor Passable Through Trench Be able to go through the trench Preferably go through trench"},{"location":"robots/2020/#tea3pos-design","title":"Tea3PO's Design","text":""},{"location":"robots/2020/#climbing-mechanism","title":"Climbing Mechanism","text":"<p>The climbing mechanism is a top priority for our robot.</p> <ul> <li>The endgame climb is the highest single-action scoring opportunity in a match.</li> <li>To get the endgame ranking point, each alliance needs a minimum of two robots hanging on the shield generator.</li> </ul>"},{"location":"robots/2020/#no-control-panel-mechanism","title":"No Control Panel Mechanism","text":"<p>A spinner mechanism for the Control Panel was of low priority</p> <ul> <li>only beneficial for gaining RP, which isn\u2019t important in playoffs.</li> <li>focused more on designing the shooter</li> </ul>"},{"location":"robots/2020/#high-goal-shooter","title":"High Goal Shooter","text":"<p>We chose to design a shooter mechanism that could score high-goal as quickly as possible.</p> <ul> <li>Rule G11 in Section 7.2.3 of the 2020 game manual states that any robot within it\u2019s target scoring zone is protected from other robots.</li> <li>Because of this rule we decided to create a shooter optimized for shooting within the target zone.</li> </ul> <p></p> One of our prototype shooters <p></p>"},{"location":"robots/2020/#autonomous-shooting","title":"Autonomous Shooting","text":"<p>We decided that it was extremely valuable to take advantage of the autonomous double point scoring period.</p> <ul> <li>At the start of each match, each robot can hold up to three balls.</li> </ul>"},{"location":"robots/2020/#ground-intake","title":"Ground Intake","text":"<p>Initially, we put a ground intake as a lower priority, but later in the season it was determined that a ground intake gave us significant strategic advantages.</p> <ul> <li>would allow us to intake balls anywhere on the field.</li> </ul>"},{"location":"robots/2020/#mechanisms-of-the-robot","title":"Mechanisms of the Robot","text":""},{"location":"robots/2020/#drivetrain","title":"Drivetrain","text":""},{"location":"robots/2020/#chassis-and-wheel","title":"Chassis and Wheel","text":"<p>The robot has a 31\" x 28\" West Coast drive base with six 6\" VEXpro traction wheels.</p> <ul> <li>6\" wheels give us sufficient ground clearance over the 1\" metal tubes in the rendezvous point</li> <li>We added a 1/16\" center drop to decrease the skid in our front and back wheels to allow for smoother pivoting.</li> <li>To reduce the distance that the power cells have to travel while maintaining chassis stability, we cut a 7\" section on our front rail that allows for power cells to pass into the robot.</li> </ul> <p></p> <p>The cut allows for power cells to be taken into the robot while still maintaining contact with either the ground intake and conveyor belt at all times without having an open chassis (shown below).</p> <p> Unlike closed chassis bots, open chassis bots do not require a ball to be raised above the front chassis frame.</p>"},{"location":"robots/2020/#drive-gearboxes","title":"Drive Gearboxes","text":"<p>Each side of the drivetrain is driven by a WCP SS gearbox with two falcon 550 motors geared at a 10.42-1 ratio. This helps achieve the robot\u2019s max speed of around 13 ft/s.</p>"},{"location":"robots/2020/#shooter","title":"Shooter","text":""},{"location":"robots/2020/#prototypes","title":"Prototypes","text":"<p>We had two main prototypes: a hooded shooter and a linear shooter.</p> <ul> <li>The linear shooter used two wheels on each side, and created relatively consistent and accurate shots. The hooded shooter also resulted in similar results.</li> <li>Both proved to have enough power to achieve the goals that we had set.</li> </ul> <p>We decided to go with the hooded shooter, as the hood increased the number of contact points between the mechanism and the power cell.</p> <p></p> <p></p> <p>We were concerned that any variation on the power cells, such as a tear or hole in the power cell, could drastically decrease the accuracy of our shots.</p>"},{"location":"robots/2020/#final-design","title":"Final Design","text":"<p>The final shooter design consists of...</p> <ul> <li>two \u00bc\" thick polycarbonate rails with arcs<ul> <li>3D printed hood attaches to the rails to control the release angle and follow the contour of the shooter wheel</li> </ul> </li> <li>a 3lb Neoprene drive roller (shooter wheel)<ul> <li>driven by 2 NEO motors at a 1:1 ratio</li> </ul> </li> </ul> Shooting Demonstration <p></p>"},{"location":"robots/2020/#accumulator","title":"Accumulator","text":""},{"location":"robots/2020/#prototypes_1","title":"Prototypes","text":"<p>Hopper vs Conveyor vs Ramp</p>"},{"location":"robots/2020/#the-ramp","title":"The Ramp","text":"<p>We tested a shallow, gravity driven ramp, but decided that the speed at which the power cells feed into the shooter would be slower than we wanted.</p>"},{"location":"robots/2020/#the-hopper","title":"The Hopper","text":"<p>Concerns about the hopper\u2019s potential to jam balls led to the conveyor being chosen over it.</p>"},{"location":"robots/2020/#the-conveyor-chosen","title":"The Conveyor (Chosen!)","text":"<p>We built a wooden prototype of the conveyor, but found that the single NEO brushless motor wasn\u2019t powerful enough to move the power cells through the system, so we settled for a two motor system.</p>"},{"location":"robots/2020/#final-design-conveyor","title":"Final Design: Conveyor","text":"<p>The final design is a conveyor that files power cells one by one. The conveyor is broken into two separate sections and has an \"L\" shape. Each section has a single NEO motor geared similarly to the shooter to minimize energy transfer between the shooter and the balls.</p> <p>For the horizontal section, brushes are placed inside the conveyor. The conveyor is capable of holding five power cells and accelerating to full speed, allowing all five power cells to exit the conveyor quickly.</p> <ul> <li>These push balls towards the rear and prevent jamming.</li> </ul> <p>The vertical section consists of a single conveyor with 0.5in compression to move the balls upward into the shooter wheel. This section automatically stores two balls vertically.</p> <ul> <li>Two photoelectric sensors are located at the top and bottom<ul> <li>The bottom sensor detects balls and tells the conveyor to run and push balls up one at a time.</li> <li>The top sensor is used to keep space between stored balls and shooter wheel</li> </ul> </li> </ul> <p></p>"},{"location":"robots/2020/#ground-intake_1","title":"Ground Intake","text":""},{"location":"robots/2020/#prototypes_2","title":"Prototypes","text":"<p>To find the types of the wheels, height of the intake, and distance of the intake from the bumpers, we drove a hex shaft with a drill, varying the wheels and relative distances until we found the combination that would allow the power cells to be rolled up into the chassis.</p> <p>We realized that because the intake is only actuated by a motor on one side, the other side would not follow and retract into the robot, resulting in one side sinking down, or an asymmetrical intake.</p> <p>We solved this issue with a set of inner intake arms, connected by a churro shaft.</p> <p></p> <p>We also found that the power cells were jamming between the intake and the conveyor. We added driven brushes to the churro support of our intake to help guide the power cells smoothly into the conveyor.</p> <p></p> Intake Demonstration <p></p>"},{"location":"robots/2020/#final-design_1","title":"Final Design","text":"<p>The final ground intake has\u2026</p> <ul> <li>Ten 3\" mecanum wheels on the intake and one center omni wheel, which center the power cells when they contact the intake.</li> <li>One pair of inner and one pair of outer polycarbonate arms, which support the hex shaft running across the front of the robot.</li> <li>The retraction is driven by a BAG motor and the spinning of the intake wheels is powered by a 775pro.</li> <li>Poly Cord belts run from the driven thunderhex shaft to the churro support, driving pulleys that spin the intake brushes.</li> </ul>"},{"location":"robots/2020/#climber","title":"Climber","text":""},{"location":"robots/2020/#prototypes_3","title":"Prototypes","text":"<p>Telescoping Cascade vs 4-Bar Arm vs One Point Pivot</p> The Telescoping Cascade <p></p> <p>The telescoping cascade was prototyped out of PVC and thin cable. It worked well, but would require us to either sacrifice not being able to fit under the trench, or build at least four stages to reach our target height.</p> The 4-Bar Arm <p> The 4-Bar Arm also worked effectively, but was eliminated for its complexity.</p> The One Point Pivot (Chosen!) <p></p> <p>The team settled on the one point pivot arm because it was</p> <ul> <li>simple</li> <li>allowed us to reach our desired height</li> <li>achievable by our team</li> </ul>"},{"location":"robots/2020/#final-design_2","title":"Final Design","text":"<p>Our final design is a one point pivoting climb with\u2026</p> <ul> <li>Two vertical support bars, which are mounted at the front of the robot, with two aluminum 1x1 tubes on each side to act as arms.<ul> <li>The arms are controlled by two 775pro motors, one for each arm.</li> </ul> </li> <li>Two polycarbonate hooks for extra reach and to attach to the climbing bar.<ul> <li>The hooks are 22\" long, and made of \u00bc\" thick polycarbonate.</li> <li>3D printed bearing carriages allow the hooks to slide up and down the climber arms</li> </ul> </li> </ul> <p>To Extend the Arm</p> <ol> <li>Gas shocks extend the climber arm upwards, and a constant force spring pulls the hooks up.</li> <li>A winch rope (paracord) holds the arms down, and when the motors actuate, allowing the winch rope to release, both the climber hooks and the arms are raised and the rope is unwound.</li> <li>If needed, bearing carriages will slide the hooks up and down the climber arms.</li> </ol> <p>To Retract the Arm</p> <ol> <li>At the start of the round, rope connecting the hooks and the motor is wound up in one direction.</li> <li>When we want to retract the arm, the motor continues to drive in the same direction, and the winch rope continues turning (in the same direction) and winds itself up again, allowing the arms to both extend out and retract back.</li> </ol> Climb Demonstration 1 <p></p> Climb Demonstration 2 <p></p>"},{"location":"safety/behavior/","title":"Behavior","text":""},{"location":"safety/behavior/#safe-behaviors-and-practices","title":"Safe Behaviors and Practices","text":"<p>A key aspect of safety in the workspace is developing good habits and practices. Doing so can help dramatically reduce the likelihood of an accident, and subsequently, an injury. Establishing safe habits also helps with the growth of a good safety culture.</p>"},{"location":"safety/behavior/#robot-operation","title":"Robot Operation","text":"<ul> <li>Safety rules for robot operation encompass all aspects when dealing with the robot, whether it be handling it for transportation, testing its functions, or driving it.</li> <li>When lifting the robot, remember to lift with the legs, not with the back<ul> <li>Keep your back straight and vertical when lifting. The robot is very heavy</li> </ul> </li> <li>Always have somebody else help you when lifting the robot. Never lift it by yourself</li> <li>Lift the robot by the frame, never the bumpers. Doing so not only damages the bumpers, but also increases the chance of the attachments failing, causing the robot to fall</li> <li>When turning to robot on to test functions, be sure to inform all teammates around you, as well as ensuring that all hands are off the robot</li> <li>If testing the drivetrain and other mobility function of the robot, make sure that it is rested on blocks with the wheels raised from the work surface</li> <li>Ensure that any sharp edges or corners are filed down to prevent injury when interacting/working on the robot</li> <li>When driving the robot, make sure that the space around the robot is clear and that everyone knows it is on<ul> <li>Only qualified members or members who receive permission to may drive the robot</li> </ul> </li> </ul>"},{"location":"safety/construction/","title":"Construction","text":""},{"location":"safety/construction/#construction-safety-rules","title":"Construction Safety Rules","text":"<p>These rules encompass the hazards that occur in the construction department, ranging from using the correct tool for the job to how to use tools correctly and safely. Rules are not limited to these, as different circumstances arise. </p>"},{"location":"safety/construction/#general-safety","title":"General Safety","text":"<ul> <li>Always wear safety goggles in the construction area (the area behind the yellow and black tape) or when handling power tools</li> <li>Be mindful of your surroundings, as debris from drilling/sawing may fly around and harm others</li> <li>Do not throw any tools or materials </li> <li>Unplug all power tools when not in use</li> <li>Do not point any power tools at anyone</li> <li>Clamp everything down properly before drilling or cutting</li> <li>Use the correct tool for the task at hand</li> <li>Remember to follow PPE rules (see above)</li> <li>Rules can be created because of you. Don't be that person. </li> </ul>"},{"location":"safety/construction/#organization","title":"Organization","text":"<ul> <li>Return everything to their designated home. Nearly every shelf or cabinet has been re-labeled or cleared for labeling purposes.</li> <li>Have a clean workspace by the end of the meeting<ul> <li>This includes returning tools to their designated storage areas and vacuuming any debris that may have been created during the meeting</li> <li></li> </ul> </li> </ul>"},{"location":"safety/construction/#sanitation","title":"Sanitation","text":"<ul> <li>Sweep debris off tables and ground after you finish working</li> </ul>"},{"location":"safety/construction/#guidelines-for-equipment","title":"Guidelines for Equipment","text":""},{"location":"safety/construction/#jigsaw","title":"Jigsaw","text":"<ul> <li>Used to quickly cut out pieces by hand that don\u2019t require much detail or cannot fit in the band saw</li> <li>Always hold with two hands</li> <li>Clamp down the object that your are cutting, either with the quick-clamps or a C-clamp</li> <li>Never turn on the jigsaw while the blade is in contact with your object; let the blade move for a second before cutting</li> <li>Keep your fingers clear of the blade</li> <li>Unplug it if not in use</li> </ul>"},{"location":"safety/construction/#portable-band-saw","title":"Portable Band Saw","text":"<ul> <li>Used for cutting straight lines in a short piece of metal or wood (e.g., pipe, 2x4)</li> <li>Always hold with two hands when in use</li> <li>Clamp down the object that you are cutting</li> <li>Keep fingers clear of the blade when the saw is turned on</li> </ul>"},{"location":"safety/construction/#drill-press","title":"Drill Press","text":"<ul> <li>Used to accurately drill holes into metal or wood</li> <li>Always clamp down the object you are drilling into</li> <li>Do not wear gloves while using the press, as it can get caught on the drill bit and cause injury</li> <li>Make sure that the drill bit is tightened and secure before turning the machine on</li> </ul>"},{"location":"safety/construction/#belt-sander","title":"Belt Sander","text":"<ul> <li>Used to smooth out rough surfaces</li> <li>Hold it with two hands when in use</li> <li>Always clamp down the object you are sanding</li> <li>Do not use it on metal</li> <li>Wear earplugs or earmuffs</li> <li>Let the belt reach top speed before making contact with the object you are sanding</li> <li>Wear a facemask in order to avoid breathing in sawdust</li> <li>Empty out the sander after each use</li> <li>Never touch the sanding belt while the sander is powered on</li> </ul>"},{"location":"safety/construction/#circular-saw","title":"Circular Saw","text":"<ul> <li>Used to cut pieces of metal or wood, better for straight lines</li> <li>Always clamp down the object you are cutting</li> <li>Hold it with two hands when in use</li> <li>Wear earplugs or earmuffs when using; the saw is very loud</li> <li>Let the saw run for a few seconds before cutting</li> </ul>"},{"location":"safety/construction/#band-saw","title":"Band Saw","text":"<ul> <li>Used to cut both straight lines or rough curves in pieces of metal or wood</li> <li>Wait until the blade reaches full speed before you begin cutting your object</li> <li>Do not wear gloves while using the bandsaw</li> <li>Clean out the bandsaw with a vacuum after you\u2019re done using it; the accumulation of sawdust can cause a fire</li> <li>Always check to make sure that the right type of blade is being used when cutting metal or wood</li> <li>Unplug the bandsaw from the wall outlet when not in use</li> <li>Never turn the bandsaw on when the gates are open</li> </ul>"},{"location":"safety/construction/#portable-hand-drill","title":"Portable Hand Drill","text":"<ul> <li>Used to drill holes into wood or metal</li> <li>If drilling a large hole, start with smaller bit sizes and slowly work your way up</li> <li>If drilling into metal, make sure to use a punch on the spot you want to drill</li> <li>Always hold the drill with two hands when in use</li> <li>When not drilling, be sure that the safety is on</li> <li>Make sure that the drill bit is secure before drilling</li> <li>Always wear safety glasses</li> </ul>"},{"location":"safety/construction/#cnc-router","title":"CNC Router","text":"<ul> <li>Used to precisely cut metal or wood. Can also be used to mill out parts</li> <li>Make sure to check oil and pressure gauges before use</li> <li>Never put any body parts inside the router when it is turned on</li> <li>Never turn of the CNC without parking it first</li> <li>Never use it without informing a mentor or administrator</li> </ul>"},{"location":"safety/construction/#soldering-iron","title":"Soldering Iron","text":"<ul> <li>Used to connect small metal wire together to create a circuit</li> <li>Never touch the metal tip when it is on</li> <li>Always clamp down the two wires you are soldering</li> <li>When not using the soldering iron, it should be placed in the metal rack</li> <li>Always dab the iron on the sponge when not in use</li> </ul>"},{"location":"safety/construction/#heat-gun","title":"Heat Gun","text":"<ul> <li>Used to shrink heat shrink around wires to ensure that they don\u2019t disconnect</li> <li>The silver metal nozzle at the front of the heat gun can get extremely hot. Never touch it</li> <li>The air that the heat gun produces is also extremely hot. This isn\u2019t just like a blow dryer</li> <li>Dont point it at people ya dumb dumb</li> </ul>"},{"location":"safety/electrical/","title":"Electrical","text":""},{"location":"safety/electrical/#electrical-safety-rules","title":"Electrical Safety Rules","text":"<p>These rules encompass the hazards that occur in the electronics department, whether it be with electricity, while handling the robot, or when using electronics tools. Rules are not limited to these, as different circumstances arise. </p>"},{"location":"safety/electrical/#general-safety","title":"General Safety","text":"<ul> <li>Be careful when taking components off the board, be mindful that adhesive is sticky</li> <li>Keep liquids and food away from any electronic devices, if needed, eat at the designated Food Table. Wash your hands when complete</li> <li>Wear shoes with rubber soles to prevent electricity from flowing through you into the ground</li> <li>Never work alone when working with electricity</li> <li>Turn off power before working on electronic circuits, except for energized testing</li> <li>Replace defective cords and plugs</li> <li>Inspect cables for defects such as frayed wiring, loose connections, or cracked insulation and replace them</li> <li>Remove metal jewelry, watches, rings, etc. before working on electrical circuits</li> <li>Work with just one hand when possible, keep the second hand away from anything that conducts electricity</li> <li>Never install a fuse of higher amperage than specifically listed for your circuit</li> <li>Make sure equipment chassis or cabinets are grounded</li> <li>Discharge capacitors in equipment before working on the circuits</li> <li>Do not attempt to solder electronic devices that are still connected to a power source</li> </ul>"},{"location":"safety/electrical/#organization","title":"Organization","text":"<ul> <li>Put things back where you found them (usually in the toolbox or shelves)</li> <li>Label cords/wires and components</li> </ul>"},{"location":"safety/electrical/#sanitization","title":"Sanitization","text":"<ul> <li>Wash hands before working with electronic devices</li> </ul>"},{"location":"safety/electrical/#cables-wires-extension-cords-etc","title":"Cables, Wires, Extension Cords, etc.","text":"<ul> <li>Do not touch exposed metal pieces, including wiring, when robot is turned on</li> <li>Make sure all cords are unplugged before touching the soldering iron and hot glue gun</li> <li>Unplug any tools when finished</li> <li>Exposed cables should be covered with electrical tape to prevent brownouts</li> </ul>"},{"location":"safety/electrical/#battery-safety","title":"Battery Safety","text":"<ul> <li>Batteries contain dangerous chemicals and must be handled properly in order to avoid spilling</li> <li>Never pull/pick up the battery by the wires. Always hold the battery by the body</li> <li>Batteries are very heavy. Use both hands when carrying them</li> <li>Never throw the battery when giving it to another person. Always carefully hand the battery to them, or set it down on a surface and let them pick it up</li> <li>Inspect the batteries on occasion to check for any damage to the battery itself, or any loose connections at the battery posts or connector</li> <li>If the battery is visibly damaged in any way, tell a lead, safety captain, or mentor<ul> <li>Never use a battery that is damaged</li> </ul> </li> </ul>"},{"location":"safety/emergency/","title":"Emergencies","text":"<p>In the event of an emergency, it is crucial you know what to do and where to go to ensure that everyone is safe. The following scenarios will go over how you must act when an emergency occurs. Please note that if you are not qualified or prepared to assist in an emergency situation, please do not put yourself or the victim in danger by attempting to do so.</p>"},{"location":"safety/emergency/#battery-spills","title":"Battery Spills:","text":"<ul> <li>Report the spill to a Mentor, Lead, or Safety Captain</li> <li>Follow the emergency procedures listed in the MSDS sheet for Sulfuric Acid</li> <li>If you are cleaning up the spill, you must be wearing rubber gloves and educated in handling dangerous materials</li> <li>Place the battery in a leak-proof container</li> <li>Neutralize the acid with baking soda</li> <li>Safely dispose of the battery acid</li> <li>If any chemicals come in contact with any skin, quickly wash it off with water and immediately seek medical attention</li> </ul>"},{"location":"safety/emergency/#earthquakes","title":"Earthquakes:","text":"<ul> <li>If outside, do not go back indoors, and stay away from trees, streetlamps, and other tall structures</li> <li>If indoors, take cover by hiding underneath the nearest sturdy table or any other object that can protect you from falling debris. (e.g. one of the lab/work tables)</li> <li>Stay inside and under cover until the earthquake stops. It is extremely dangerous to try and run outside during an earthquake</li> <li>Electricity may shut down or fire sprinklers may go off during an earthquake</li> <li>Be wary, aftershocks may still continue after the initial quake</li> </ul>"},{"location":"safety/emergency/#fires","title":"Fires:","text":"<p>During the event of a fire, always follow R.A.C.E. fire procedures in order to keep yourself and those around you safe. </p> <ul> <li>Relocate:<ul> <li>Relocate any persons from the immediate scene</li> </ul> </li> <li>Alert/Activate:<ul> <li>Pull the nearest alarm and call 911, then the following numbers</li> </ul> </li> <li>Confine:<ul> <li>Close all doors to the hazard or fire area</li> </ul> </li> <li>Extinguish/Evacuate:<ul> <li>Extinguish using the closest fire extinguisher if the fire impedes your evacuation. Evacuate to your designated meeting location.</li> </ul> </li> </ul>"},{"location":"safety/generalsafety/","title":"General Safety Guidelines","text":""},{"location":"safety/generalsafety/#general-goal-of-safety","title":"General Goal of Safety","text":"<p>Safety is always first. This manual\u2019s purpose is to prevent robotics and machinery related injuries, illnesses, or emergencies. By following the guidelines set in this safety manual, you can help keep yourself and the people around you safe.</p>"},{"location":"safety/generalsafety/#general-safety-rules","title":"General Safety Rules","text":"<ol> <li>Always put your own and others\u2019 safety first during meetings, when working on the robot, and during competitions </li> <li>Mills High School Code of Conduct and safety rules apply to all students in the Makerspace</li> <li>During competitions, always wear safety glasses in the pit</li> <li>In the construction area of the Makerspace, make sure to wear safety goggles if there is machinery on nearby.</li> </ol>"},{"location":"safety/generalsafety/#all-members-of-team-253-are-required-to","title":"All members of Team 253 are required to:","text":"<ol> <li>Understand and follow safety manual rules and directions.</li> <li>Ask a member of the safety team, or any robotics managers if assistance is needed.</li> <li>Use common sense. </li> </ol>"},{"location":"safety/injuries/","title":"Injury Protocol","text":""},{"location":"safety/injuries/#minor-injuries","title":"Minor Injuries","text":"<ul> <li>Consult a safety captain, lead, or mentor in case of minor scrapes, burns or injuries.</li> <li>Keep calm in case of any injuries, increased heart rate creates chance of further injury.</li> <li>Take action, if bystanders crowd the area of injury, encourage them to make room for any safety captain, lead or mentor to attend to those injured, and prevent panic.</li> </ul>"},{"location":"safety/injuries/#major-injuries","title":"Major Injuries","text":"<ul> <li>Consult a safety captain, lead, or mentor in case of injury</li> <li>Call 911 immediately in any life threatening emergency/injury</li> <li>Notify a First Aid/CPR certified person</li> <li>Take action, if bystanders crowd the area of injury, encourage them to make room for any safety captain, lead or mentor to attend to those injured, and prevent panic</li> </ul>"},{"location":"safety/injuries/#cpr","title":"CPR","text":"<p>\u201cFor healthcare providers and those trained: conventional CPR using chest compressions and mouth-to-mouth breathing at a ratio of 30:2 compressions-to-breaths. In adult victims of cardiac arrest, it is reasonable for rescuers to perform chest compressions at a rate of 100 to 120/min and to a depth of at least 2 inches (5 cm) for an average adult, while avoiding excessive chest compression depths (greater than 2.4 inches [6 cm]).\u201d</p> <p>\u201cFor the general public or bystanders who witness an adult suddenly collapse: compression-only CPR, or Hands-Only CPR. Hands-Only CPR is CPR without mouth-to-mouth breaths. It is recommended for use by people who see a teen or adult suddenly collapse in an out-of-hospital setting (such as at home, at work, or in a park).\u201d</p> <p>2 steps to Hands-Only CPR: \u20021. Call 9-1-1 (or send someone to do that) \u20022. Push hard and fast in the center of the chest  </p>"},{"location":"safety/injuries/#remember","title":"Remember:","text":"<ol> <li>Minimize interruptions in chest compressions  </li> <li>Provide compressions of adequate rate and depth  </li> <li>Avoid leaning on the victim between compressions  </li> <li>Ensure proper hand placement  </li> <li>Avoid excessive ventilation  </li> </ol>"},{"location":"safety/misc/","title":"Evacuation, Checklist, Injury Report Form:","text":"<p>If we are at Mills and something goes horribly wrong, we will need to evacuate the area. Please look at this map for the evacuation routes here at Mills.</p> <p></p> <p>Routes for evacuation at Mills High School</p> <p>There is also a safety checklist and an injury report form. If you need to refer to these they are here</p> <ul> <li>Safety Checklist</li> <li>Serious Injury Report Form</li> </ul>"},{"location":"safety/operations/","title":"Operations Safety","text":"<p>These rules encompass the hazards that occur in the Operations department, put in place to assist the assembly and ensure safety in the use of various visual displays that promote FIRST and our team.</p>"},{"location":"safety/operations/#display-safety","title":"Display Safety:","text":"<p>Indoor: The display should not block emergency exits or hinder evacuation Ensure that the display can support its own weight and stand without falling over or collapsing Always securely anchor the display to the wall or floor when given the opportunity Shelves and tables should lack sharp edges or corners, and should only carry the amount of weight they are rated for</p>"},{"location":"safety/operations/#pit-safety","title":"Pit Safety:","text":"<p>The Pit area at competitions is a 10 ft x 10 ft area that FIRST provides for a team to assemble and fix their robot before and after matches. In order to optimize the space given while maximizing efficiency, comfort, and safety, certain rules must be put in place. A pit should also present a welcoming and positive atmosphere in an effort to eliminate as many stressful and possibly harmful conditions as possible.</p> <p>A proper pit should include (but not limited to):</p> <ul> <li>First Aid Kit</li> <li>Battery Spill Kit</li> <li>Safety Captain</li> <li>Organized toolboxes</li> <li>Separation of department equipment</li> <li>Set-aside area for robot to stay while being worked on</li> <li>Inviting marketing display</li> </ul>"},{"location":"safety/ppe/","title":"PPE","text":""},{"location":"safety/ppe/#personal-protective-equipment-ppe","title":"Personal Protective Equipment (PPE)","text":"<p>All members of the Mills Robotics Team (mentors, leads, general members, etc.) are responsible for making sure that they and all other members are wearing proper protective equipment.</p>"},{"location":"safety/ppe/#proper-ppe-includes","title":"Proper PPE Includes:","text":""},{"location":"safety/ppe/#suitable-clothing","title":"Suitable Clothing","text":"<ul> <li>When working or observing within fifty feet of a machine or inside the Makerspace, pants must be worn at all times</li> <li>When inside the Makerspace, closed-toed shoes must also be worn at all times </li> <li>Open-toed shoes, such as sandals, flip-flops, slippers, or high-heels are not allowed</li> <li>Loose, baggy clothing, hooded sweatshirts, and other clothing with dangling strings are not permitted within ten feet of a machine or robot. However, this can be circumvented by making sure they are not dangling (Ex: tucking in the dangling strings of a hooded sweatshirt inside of the sweatshirt)</li> <li>When working or observing within ten feet of a machine, wearing jewelry is not recommended as they can be caught inside the machine, potentially harming the wearer and others around them</li> </ul>"},{"location":"safety/ppe/#hearing-protection","title":"Hearing Protection","text":"<p>When operating any loud equipment (CNC Machines, circular saw, etc.), earmuffs, earplugs, or other hearing protection are highly recommended</p>"},{"location":"safety/ppe/#eye-protection","title":"Eye Protection","text":"<ul> <li>Safety Glasses with proper side shields are required at all times when in the Construction department\u2019s workspace (behind the yellow and black tape) and in the pit at competitions</li> <li>Safety Glasses are also required within ten feet of any soldering, wire cutting, or work involving power and electricity (including any work on the robot)</li> </ul>"},{"location":"safety/ppe/#hand-protection","title":"Hand Protection","text":"<ul> <li>Plastic or rubber gloves are required when handling solvents, acids, or any other potentially dangerous chemicals</li> <li>Latex gloves (not plastic or rubber) are required when administering first aid to an injured person</li> </ul>"},{"location":"safety/ppe/#hair-protection","title":"Hair Protection","text":"<ul> <li>If you have hair that goes down to your shoulders or below, you should tie it back in order to avoid having it caught in equipment or getting in the way of your work</li> </ul>"},{"location":"safety/ppe/#respiratory-protection","title":"Respiratory Protection","text":"<ul> <li>When operating machines such as the band saw or belt sander, it is important to wear proper respiratory protection, as they produce small particles that can be inhaled</li> <li>It is especially important to remember to wear them when working on wood or plastic/acrylic; these materials produce the most dust and fumes</li> </ul>"},{"location":"safety/programming/","title":"Programming","text":""},{"location":"safety/programming/#programming-safety-rules","title":"Programming Safety Rules","text":"<p>These rules encompass the hazards that occur in the programming department, such as running or testing the robots code. Rules are not limited to these, as different circumstances arise.</p>"},{"location":"safety/programming/#general-safety","title":"General Safety","text":"<ul> <li>Use common sense</li> <li>Make sure people are aware that the robot is running before conducting tests in order to avoid accidents. For example, yell \u201cROBOT ON\u201d when turning on the robot</li> <li>Do not enable the robot while people\u2019s hands are inside</li> <li>Make sure teammates are aware before actuating any mechanisms</li> <li>Stay aware of your surroundings and others around you when working</li> <li>When testing robot code, keep an eye on the emergency stop button in the event that something goes wrong with the robot.</li> </ul>"},{"location":"safety/programming/#organization","title":"Organization","text":"<ul> <li>At the end of every meeting, shut down laptops and plug them in</li> </ul>"},{"location":"safety/programming/#sanitization","title":"Sanitization","text":"<ul> <li>Do not consume drinks near computers.</li> </ul>"},{"location":"tapioca/contributing/setup/","title":"Setup","text":"<p>This page should give you a comprehensive guide on setting up your environment for developing Tapioca. If anything here doesn't work or seems incomplete, feel free to update the documentation.</p> <p>If you need help with anything, don't hesitate to ask your programming lead for help!</p>"},{"location":"tapioca/contributing/setup/#prerequisite-installations","title":"Prerequisite Installations","text":"<p>Things you need to have installed before you can setup.</p>"},{"location":"tapioca/contributing/setup/#git","title":"Git","text":"<p>You will need to Install Git as well as have a basic understanding of it. Git lessons can be found online or in the programming section of the bobadocs.</p>"},{"location":"tapioca/contributing/setup/#wpilib","title":"WPILib","text":"<p>You will also need WPILib installed on the computer you plan to develop Tapioca on, even if it's not a computer you plan to develop or run robot code on. An installation guide can be found here.</p>"},{"location":"tapioca/contributing/setup/#cloning","title":"Cloning","text":"<p>Use git to clone the Tapioca project (https://github.com/bobabots253/Tapioca). You will operate on this folder in the next sections.</p>"},{"location":"tapioca/contributing/setup/#editor","title":"Editor","text":"<p>You can technically use any editor for development of Tapioca, but certain features of commonly used IDEs are very helpful when developing this project. If you're a diehard Eclipse enjoyer or Vim guru feel free to keep using what you're comfortable using.</p> <p>Below are some setup steps to streamline development of Tapioca. If you're using a different IDE, you may want to figure out how to do the equivalent of the steps below.</p> <p>For a guide on building Tapioca, see building.</p>"},{"location":"tapioca/contributing/setup/#vscode","title":"VSCode","text":"<p>Using your WPILib installation of VSCode is probably the most convenient way to work on Tapioca.</p> <p>Simply open Tapioca with VSCode just like any other project. If you've installed have the plugins from your WPILib installation, you're all set!</p>"},{"location":"tapioca/contributing/setup/#intellij-idea","title":"Intellij IDEA","text":"<p>Intellij IDEA is a more robust IDE with a higher focus and features specifically for Java development.</p> <p>When opening Tapioca as you would any other project, you might be prompted to install an unofficial \"FRC\" plugin. This is not necessary.</p> <p>The first thing you will want to do is navigate to your Gradle settings by clicking the Gradle tab on the right, clicking the settings icon, and then clicking \"Gradle Settings...\"</p> <p></p> <p>Next, you'll want to make sure you're using gradle either from <code>'gradle-wrapper.properties' file</code> or <code>'wrapper' task in gradle build script</code></p> <p></p> <p>Finally, make sure \"Gradle JVM\" is configured to be using JDK 11. If you don't have it as an option or you don't have it installed, don't worry! Your WPILib installation comes with JDK 11.</p> Using WPILib's JDK <p>Click on <code>Add JDK...</code></p> <p></p> <p>Then depending on your operating system, the path to WPILib's JDK will be different.</p> Windows <p>On Windows the path to your WPILib JDK is <code>C:\\Users\\Public\\wpilib\\&lt;year number&gt;\\jdk</code></p> <p>For example, in the year 2021 it would be <code>C:\\Users\\Public\\wpilib\\2021\\jdk</code>:</p> <p></p> <p>Select the folder (Do not go inside) and then click \"OK\".</p> MacOS/Linux <p>On MacOS and Linux the path to your WPILib JDK is <code>~wpilib/&lt;year number&gt;/jdk</code></p> <p>For example, in the year 2021 it would be <code>~/wpilib/2021/jdk</code>.</p> <p>(On Linux <code>~</code> represents <code>/home/username</code>, and on MacOS <code>~</code> represents <code>/Users/username</code>)</p> <p></p> <p>Finally, run two of the pre-defined run configurations by selecting them from the dropdown menu at the top of your IDE and then clicking the run button. (Your icons may look different)</p> <p> </p> <p>These tasks will generate some files that make development a lot smoother.</p>"},{"location":"tapioca/contributing/setup/#extras","title":"Extras","text":"<p>This section contains explanations of what was documented above for future reference and for easy updating of the documentation in case technologies we use change.</p> Why does WPILib need to be installed? <p>WPILib is a dependency of Tapioca. Without the WPILib installation, you wouldn't be able to build Tapioca or install any of the vendor dependencies, and without being able to build Tapioca you wouldn't be able to test it.</p> Setting up your IDE <p>This is a more general guide on setting up your IDE for Tapioca development. The steps above for Intellij are just specific steps that follow the steps listed here. The WPILib installation of VSCode does most of the work for us, which is why that section is so short.</p> <ol> <li>Install WPILib (see the dropdown above)</li> <li>Make sure you're using JDK 11 (You can set JAVA_HOME with the flag <code>-Dorg.gradle.java.home=\"C:\\Users\\Public\\wpilib\\2021\\jdk\"</code> in most commands)</li> <li>Set up Gradle to use the wrapper (<code>./gradlew wrapper</code>)</li> </ol>"}]}